// Code generated by 'github.com/containous/yaegi/extract gonum.org/v1/gonum/graph/iterator'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.15,!go1.16

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/graph/iterator"
)

func init() {
	Symbols["gonum.org/v1/gonum/graph/iterator"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"NewImplicitNodes":                   reflect.ValueOf(iterator.NewImplicitNodes),
		"NewLazyOrderedNodes":                reflect.ValueOf(iterator.NewLazyOrderedNodes),
		"NewLazyOrderedNodesByEdge":          reflect.ValueOf(iterator.NewLazyOrderedNodesByEdge),
		"NewLazyOrderedNodesByLines":         reflect.ValueOf(iterator.NewLazyOrderedNodesByLines),
		"NewLazyOrderedNodesByWeightedEdge":  reflect.ValueOf(iterator.NewLazyOrderedNodesByWeightedEdge),
		"NewLazyOrderedNodesByWeightedLines": reflect.ValueOf(iterator.NewLazyOrderedNodesByWeightedLines),
		"NewNodes":                           reflect.ValueOf(iterator.NewNodes),
		"NewNodesByEdge":                     reflect.ValueOf(iterator.NewNodesByEdge),
		"NewNodesByLines":                    reflect.ValueOf(iterator.NewNodesByLines),
		"NewNodesByWeightedEdge":             reflect.ValueOf(iterator.NewNodesByWeightedEdge),
		"NewNodesByWeightedLines":            reflect.ValueOf(iterator.NewNodesByWeightedLines),
		"NewOrderedEdges":                    reflect.ValueOf(iterator.NewOrderedEdges),
		"NewOrderedLines":                    reflect.ValueOf(iterator.NewOrderedLines),
		"NewOrderedNodes":                    reflect.ValueOf(iterator.NewOrderedNodes),
		"NewOrderedWeightedEdges":            reflect.ValueOf(iterator.NewOrderedWeightedEdges),
		"NewOrderedWeightedLines":            reflect.ValueOf(iterator.NewOrderedWeightedLines),

		// type definitions
		"ImplicitNodes":                   reflect.ValueOf((*iterator.ImplicitNodes)(nil)),
		"LazyOrderedNodes":                reflect.ValueOf((*iterator.LazyOrderedNodes)(nil)),
		"LazyOrderedNodesByEdge":          reflect.ValueOf((*iterator.LazyOrderedNodesByEdge)(nil)),
		"LazyOrderedNodesByLines":         reflect.ValueOf((*iterator.LazyOrderedNodesByLines)(nil)),
		"LazyOrderedNodesByWeightedEdge":  reflect.ValueOf((*iterator.LazyOrderedNodesByWeightedEdge)(nil)),
		"LazyOrderedNodesByWeightedLines": reflect.ValueOf((*iterator.LazyOrderedNodesByWeightedLines)(nil)),
		"Nodes":                           reflect.ValueOf((*iterator.Nodes)(nil)),
		"NodesByEdge":                     reflect.ValueOf((*iterator.NodesByEdge)(nil)),
		"OrderedEdges":                    reflect.ValueOf((*iterator.OrderedEdges)(nil)),
		"OrderedLines":                    reflect.ValueOf((*iterator.OrderedLines)(nil)),
		"OrderedNodes":                    reflect.ValueOf((*iterator.OrderedNodes)(nil)),
		"OrderedWeightedEdges":            reflect.ValueOf((*iterator.OrderedWeightedEdges)(nil)),
		"OrderedWeightedLines":            reflect.ValueOf((*iterator.OrderedWeightedLines)(nil)),
	}
}
