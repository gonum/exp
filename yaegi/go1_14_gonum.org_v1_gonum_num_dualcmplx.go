// Code generated by 'goexports gonum.org/v1/gonum/num/dualcmplx'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.14,!go1.15

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/num/dualcmplx"
)

func init() {
	Symbols["gonum.org/v1/gonum/num/dualcmplx"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Abs":     reflect.ValueOf(dualcmplx.Abs),
		"Add":     reflect.ValueOf(dualcmplx.Add),
		"Conj":    reflect.ValueOf(dualcmplx.Conj),
		"Exp":     reflect.ValueOf(dualcmplx.Exp),
		"Inv":     reflect.ValueOf(dualcmplx.Inv),
		"Log":     reflect.ValueOf(dualcmplx.Log),
		"Mul":     reflect.ValueOf(dualcmplx.Mul),
		"Pow":     reflect.ValueOf(dualcmplx.Pow),
		"PowReal": reflect.ValueOf(dualcmplx.PowReal),
		"Scale":   reflect.ValueOf(dualcmplx.Scale),
		"Sqrt":    reflect.ValueOf(dualcmplx.Sqrt),
		"Sub":     reflect.ValueOf(dualcmplx.Sub),

		// type definitions
		"Number": reflect.ValueOf((*dualcmplx.Number)(nil)),
	}
}
