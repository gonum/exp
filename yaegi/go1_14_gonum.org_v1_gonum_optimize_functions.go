// Code generated by 'goexports gonum.org/v1/gonum/optimize/functions'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.14,!go1.15

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/optimize/functions"
)

func init() {
	Symbols["gonum.org/v1/gonum/optimize/functions"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"NewMinimalSurface": reflect.ValueOf(functions.NewMinimalSurface),

		// type definitions
		"Ackley":                     reflect.ValueOf((*functions.Ackley)(nil)),
		"Beale":                      reflect.ValueOf((*functions.Beale)(nil)),
		"BiggsEXP2":                  reflect.ValueOf((*functions.BiggsEXP2)(nil)),
		"BiggsEXP3":                  reflect.ValueOf((*functions.BiggsEXP3)(nil)),
		"BiggsEXP4":                  reflect.ValueOf((*functions.BiggsEXP4)(nil)),
		"BiggsEXP5":                  reflect.ValueOf((*functions.BiggsEXP5)(nil)),
		"BiggsEXP6":                  reflect.ValueOf((*functions.BiggsEXP6)(nil)),
		"Box3D":                      reflect.ValueOf((*functions.Box3D)(nil)),
		"BraninHoo":                  reflect.ValueOf((*functions.BraninHoo)(nil)),
		"BrownAndDennis":             reflect.ValueOf((*functions.BrownAndDennis)(nil)),
		"BrownBadlyScaled":           reflect.ValueOf((*functions.BrownBadlyScaled)(nil)),
		"Bukin6":                     reflect.ValueOf((*functions.Bukin6)(nil)),
		"CamelSix":                   reflect.ValueOf((*functions.CamelSix)(nil)),
		"CamelThree":                 reflect.ValueOf((*functions.CamelThree)(nil)),
		"ConcaveLeft":                reflect.ValueOf((*functions.ConcaveLeft)(nil)),
		"ConcaveRight":               reflect.ValueOf((*functions.ConcaveRight)(nil)),
		"CrossInTray":                reflect.ValueOf((*functions.CrossInTray)(nil)),
		"DixonPrice":                 reflect.ValueOf((*functions.DixonPrice)(nil)),
		"DropWave":                   reflect.ValueOf((*functions.DropWave)(nil)),
		"Eggholder":                  reflect.ValueOf((*functions.Eggholder)(nil)),
		"ExtendedPowellSingular":     reflect.ValueOf((*functions.ExtendedPowellSingular)(nil)),
		"ExtendedRosenbrock":         reflect.ValueOf((*functions.ExtendedRosenbrock)(nil)),
		"Gaussian":                   reflect.ValueOf((*functions.Gaussian)(nil)),
		"GramacyLee":                 reflect.ValueOf((*functions.GramacyLee)(nil)),
		"Griewank":                   reflect.ValueOf((*functions.Griewank)(nil)),
		"GulfResearchAndDevelopment": reflect.ValueOf((*functions.GulfResearchAndDevelopment)(nil)),
		"HelicalValley":              reflect.ValueOf((*functions.HelicalValley)(nil)),
		"HolderTable":                reflect.ValueOf((*functions.HolderTable)(nil)),
		"Langermann2":                reflect.ValueOf((*functions.Langermann2)(nil)),
		"Levy":                       reflect.ValueOf((*functions.Levy)(nil)),
		"Levy13":                     reflect.ValueOf((*functions.Levy13)(nil)),
		"Linear":                     reflect.ValueOf((*functions.Linear)(nil)),
		"MinimalSurface":             reflect.ValueOf((*functions.MinimalSurface)(nil)),
		"Minimum":                    reflect.ValueOf((*functions.Minimum)(nil)),
		"PenaltyI":                   reflect.ValueOf((*functions.PenaltyI)(nil)),
		"PenaltyII":                  reflect.ValueOf((*functions.PenaltyII)(nil)),
		"Plassmann":                  reflect.ValueOf((*functions.Plassmann)(nil)),
		"PowellBadlyScaled":          reflect.ValueOf((*functions.PowellBadlyScaled)(nil)),
		"Rastrigin":                  reflect.ValueOf((*functions.Rastrigin)(nil)),
		"Schaffer2":                  reflect.ValueOf((*functions.Schaffer2)(nil)),
		"Schaffer4":                  reflect.ValueOf((*functions.Schaffer4)(nil)),
		"Schwefel":                   reflect.ValueOf((*functions.Schwefel)(nil)),
		"Shubert":                    reflect.ValueOf((*functions.Shubert)(nil)),
		"Trigonometric":              reflect.ValueOf((*functions.Trigonometric)(nil)),
		"VariablyDimensioned":        reflect.ValueOf((*functions.VariablyDimensioned)(nil)),
		"Watson":                     reflect.ValueOf((*functions.Watson)(nil)),
		"Wood":                       reflect.ValueOf((*functions.Wood)(nil)),
		"YanaiOzawaKaneko":           reflect.ValueOf((*functions.YanaiOzawaKaneko)(nil)),
	}
}
