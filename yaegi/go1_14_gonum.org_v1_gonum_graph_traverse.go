// Code generated by 'goexports gonum.org/v1/gonum/graph/traverse'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.14,!go1.15

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/graph"
	"gonum.org/v1/gonum/graph/traverse"
)

func init() {
	Symbols["gonum.org/v1/gonum/graph/traverse"] = map[string]reflect.Value{
		// type definitions
		"BreadthFirst": reflect.ValueOf((*traverse.BreadthFirst)(nil)),
		"DepthFirst":   reflect.ValueOf((*traverse.DepthFirst)(nil)),
		"Graph":        reflect.ValueOf((*traverse.Graph)(nil)),

		// interface wrapper definitions
		"_Graph": reflect.ValueOf((*_gonum_org_v1_gonum_graph_traverse_Graph)(nil)),
	}
}

// _gonum_org_v1_gonum_graph_traverse_Graph is an interface wrapper for Graph type
type _gonum_org_v1_gonum_graph_traverse_Graph struct {
	WEdge func(uid int64, vid int64) graph.Edge
	WFrom func(id int64) graph.Nodes
}

func (W _gonum_org_v1_gonum_graph_traverse_Graph) Edge(uid int64, vid int64) graph.Edge {
	return W.WEdge(uid, vid)
}
func (W _gonum_org_v1_gonum_graph_traverse_Graph) From(id int64) graph.Nodes { return W.WFrom(id) }
