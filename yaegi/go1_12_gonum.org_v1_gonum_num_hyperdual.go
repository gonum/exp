// Code generated by 'goexports gonum.org/v1/gonum/num/hyperdual'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.12,!go1.13

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/num/hyperdual"
)

func init() {
	Symbols["gonum.org/v1/gonum/num/hyperdual"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Abs":     reflect.ValueOf(hyperdual.Abs),
		"Acos":    reflect.ValueOf(hyperdual.Acos),
		"Acosh":   reflect.ValueOf(hyperdual.Acosh),
		"Add":     reflect.ValueOf(hyperdual.Add),
		"Asin":    reflect.ValueOf(hyperdual.Asin),
		"Asinh":   reflect.ValueOf(hyperdual.Asinh),
		"Atan":    reflect.ValueOf(hyperdual.Atan),
		"Atanh":   reflect.ValueOf(hyperdual.Atanh),
		"Cos":     reflect.ValueOf(hyperdual.Cos),
		"Cosh":    reflect.ValueOf(hyperdual.Cosh),
		"Exp":     reflect.ValueOf(hyperdual.Exp),
		"Inv":     reflect.ValueOf(hyperdual.Inv),
		"Log":     reflect.ValueOf(hyperdual.Log),
		"Mul":     reflect.ValueOf(hyperdual.Mul),
		"Pow":     reflect.ValueOf(hyperdual.Pow),
		"PowReal": reflect.ValueOf(hyperdual.PowReal),
		"Scale":   reflect.ValueOf(hyperdual.Scale),
		"Sin":     reflect.ValueOf(hyperdual.Sin),
		"Sinh":    reflect.ValueOf(hyperdual.Sinh),
		"Sqrt":    reflect.ValueOf(hyperdual.Sqrt),
		"Sub":     reflect.ValueOf(hyperdual.Sub),
		"Tan":     reflect.ValueOf(hyperdual.Tan),
		"Tanh":    reflect.ValueOf(hyperdual.Tanh),

		// type definitions
		"Number": reflect.ValueOf((*hyperdual.Number)(nil)),
	}
}
