// Code generated by 'github.com/containous/yaegi/extract gonum.org/v1/gonum/graph/formats/dot/ast'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.15,!go1.16

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/graph/formats/dot/ast"
)

func init() {
	Symbols["gonum.org/v1/gonum/graph/formats/dot/ast"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CompassPointCenter":    reflect.ValueOf(ast.CompassPointCenter),
		"CompassPointDefault":   reflect.ValueOf(ast.CompassPointDefault),
		"CompassPointEast":      reflect.ValueOf(ast.CompassPointEast),
		"CompassPointNone":      reflect.ValueOf(ast.CompassPointNone),
		"CompassPointNorth":     reflect.ValueOf(ast.CompassPointNorth),
		"CompassPointNorthEast": reflect.ValueOf(ast.CompassPointNorthEast),
		"CompassPointNorthWest": reflect.ValueOf(ast.CompassPointNorthWest),
		"CompassPointSouth":     reflect.ValueOf(ast.CompassPointSouth),
		"CompassPointSouthEast": reflect.ValueOf(ast.CompassPointSouthEast),
		"CompassPointSouthWest": reflect.ValueOf(ast.CompassPointSouthWest),
		"CompassPointWest":      reflect.ValueOf(ast.CompassPointWest),
		"EdgeKind":              reflect.ValueOf(ast.EdgeKind),
		"GraphKind":             reflect.ValueOf(ast.GraphKind),
		"NodeKind":              reflect.ValueOf(ast.NodeKind),

		// type definitions
		"Attr":         reflect.ValueOf((*ast.Attr)(nil)),
		"AttrStmt":     reflect.ValueOf((*ast.AttrStmt)(nil)),
		"CompassPoint": reflect.ValueOf((*ast.CompassPoint)(nil)),
		"Edge":         reflect.ValueOf((*ast.Edge)(nil)),
		"EdgeStmt":     reflect.ValueOf((*ast.EdgeStmt)(nil)),
		"File":         reflect.ValueOf((*ast.File)(nil)),
		"Graph":        reflect.ValueOf((*ast.Graph)(nil)),
		"Kind":         reflect.ValueOf((*ast.Kind)(nil)),
		"Node":         reflect.ValueOf((*ast.Node)(nil)),
		"NodeStmt":     reflect.ValueOf((*ast.NodeStmt)(nil)),
		"Port":         reflect.ValueOf((*ast.Port)(nil)),
		"Stmt":         reflect.ValueOf((*ast.Stmt)(nil)),
		"Subgraph":     reflect.ValueOf((*ast.Subgraph)(nil)),
		"Vertex":       reflect.ValueOf((*ast.Vertex)(nil)),

		// interface wrapper definitions
		"_Stmt":   reflect.ValueOf((*_gonum_org_v1_gonum_graph_formats_dot_ast_Stmt)(nil)),
		"_Vertex": reflect.ValueOf((*_gonum_org_v1_gonum_graph_formats_dot_ast_Vertex)(nil)),
	}
}

// _gonum_org_v1_gonum_graph_formats_dot_ast_Stmt is an interface wrapper for Stmt type
type _gonum_org_v1_gonum_graph_formats_dot_ast_Stmt struct {
	WString func() string
}

func (W _gonum_org_v1_gonum_graph_formats_dot_ast_Stmt) String() string { return W.WString() }

// _gonum_org_v1_gonum_graph_formats_dot_ast_Vertex is an interface wrapper for Vertex type
type _gonum_org_v1_gonum_graph_formats_dot_ast_Vertex struct {
	WString func() string
}

func (W _gonum_org_v1_gonum_graph_formats_dot_ast_Vertex) String() string { return W.WString() }
