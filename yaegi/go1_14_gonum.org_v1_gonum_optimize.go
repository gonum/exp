// Code generated by 'goexports gonum.org/v1/gonum/optimize'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.14,!go1.15

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/optimize"
)

func init() {
	Symbols["gonum.org/v1/gonum/optimize"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ArmijoConditionMet":       reflect.ValueOf(optimize.ArmijoConditionMet),
		"ErrLinesearcherBound":     reflect.ValueOf(&optimize.ErrLinesearcherBound).Elem(),
		"ErrLinesearcherFailure":   reflect.ValueOf(&optimize.ErrLinesearcherFailure).Elem(),
		"ErrMissingGrad":           reflect.ValueOf(&optimize.ErrMissingGrad).Elem(),
		"ErrMissingHess":           reflect.ValueOf(&optimize.ErrMissingHess).Elem(),
		"ErrNoProgress":            reflect.ValueOf(&optimize.ErrNoProgress).Elem(),
		"ErrNonDescentDirection":   reflect.ValueOf(&optimize.ErrNonDescentDirection).Elem(),
		"ErrZeroDimensional":       reflect.ValueOf(&optimize.ErrZeroDimensional).Elem(),
		"Failure":                  reflect.ValueOf(optimize.Failure),
		"FuncEvaluation":           reflect.ValueOf(optimize.FuncEvaluation),
		"FunctionConvergence":      reflect.ValueOf(optimize.FunctionConvergence),
		"FunctionEvaluationLimit":  reflect.ValueOf(optimize.FunctionEvaluationLimit),
		"FunctionNegativeInfinity": reflect.ValueOf(optimize.FunctionNegativeInfinity),
		"FunctionThreshold":        reflect.ValueOf(optimize.FunctionThreshold),
		"GradEvaluation":           reflect.ValueOf(optimize.GradEvaluation),
		"GradientEvaluationLimit":  reflect.ValueOf(optimize.GradientEvaluationLimit),
		"GradientThreshold":        reflect.ValueOf(optimize.GradientThreshold),
		"HessEvaluation":           reflect.ValueOf(optimize.HessEvaluation),
		"HessianEvaluationLimit":   reflect.ValueOf(optimize.HessianEvaluationLimit),
		"InitIteration":            reflect.ValueOf(optimize.InitIteration),
		"IterationLimit":           reflect.ValueOf(optimize.IterationLimit),
		"MajorIteration":           reflect.ValueOf(optimize.MajorIteration),
		"MethodConverge":           reflect.ValueOf(optimize.MethodConverge),
		"MethodDone":               reflect.ValueOf(optimize.MethodDone),
		"Minimize":                 reflect.ValueOf(optimize.Minimize),
		"NewPrinter":               reflect.ValueOf(optimize.NewPrinter),
		"NewStatus":                reflect.ValueOf(optimize.NewStatus),
		"NoOperation":              reflect.ValueOf(optimize.NoOperation),
		"NotTerminated":            reflect.ValueOf(optimize.NotTerminated),
		"PostIteration":            reflect.ValueOf(optimize.PostIteration),
		"RuntimeLimit":             reflect.ValueOf(optimize.RuntimeLimit),
		"StepConvergence":          reflect.ValueOf(optimize.StepConvergence),
		"StrongWolfeConditionsMet": reflect.ValueOf(optimize.StrongWolfeConditionsMet),
		"Success":                  reflect.ValueOf(optimize.Success),
		"WeakWolfeConditionsMet":   reflect.ValueOf(optimize.WeakWolfeConditionsMet),

		// type definitions
		"Available":          reflect.ValueOf((*optimize.Available)(nil)),
		"BFGS":               reflect.ValueOf((*optimize.BFGS)(nil)),
		"Backtracking":       reflect.ValueOf((*optimize.Backtracking)(nil)),
		"Bisection":          reflect.ValueOf((*optimize.Bisection)(nil)),
		"CG":                 reflect.ValueOf((*optimize.CG)(nil)),
		"CGVariant":          reflect.ValueOf((*optimize.CGVariant)(nil)),
		"CmaEsChol":          reflect.ValueOf((*optimize.CmaEsChol)(nil)),
		"ConstantStepSize":   reflect.ValueOf((*optimize.ConstantStepSize)(nil)),
		"Converger":          reflect.ValueOf((*optimize.Converger)(nil)),
		"DaiYuan":            reflect.ValueOf((*optimize.DaiYuan)(nil)),
		"ErrFunc":            reflect.ValueOf((*optimize.ErrFunc)(nil)),
		"ErrGrad":            reflect.ValueOf((*optimize.ErrGrad)(nil)),
		"FirstOrderStepSize": reflect.ValueOf((*optimize.FirstOrderStepSize)(nil)),
		"FletcherReeves":     reflect.ValueOf((*optimize.FletcherReeves)(nil)),
		"FunctionConverge":   reflect.ValueOf((*optimize.FunctionConverge)(nil)),
		"GradientDescent":    reflect.ValueOf((*optimize.GradientDescent)(nil)),
		"GuessAndCheck":      reflect.ValueOf((*optimize.GuessAndCheck)(nil)),
		"HagerZhang":         reflect.ValueOf((*optimize.HagerZhang)(nil)),
		"HestenesStiefel":    reflect.ValueOf((*optimize.HestenesStiefel)(nil)),
		"LBFGS":              reflect.ValueOf((*optimize.LBFGS)(nil)),
		"LinesearchMethod":   reflect.ValueOf((*optimize.LinesearchMethod)(nil)),
		"Linesearcher":       reflect.ValueOf((*optimize.Linesearcher)(nil)),
		"ListSearch":         reflect.ValueOf((*optimize.ListSearch)(nil)),
		"Location":           reflect.ValueOf((*optimize.Location)(nil)),
		"Method":             reflect.ValueOf((*optimize.Method)(nil)),
		"MoreThuente":        reflect.ValueOf((*optimize.MoreThuente)(nil)),
		"NelderMead":         reflect.ValueOf((*optimize.NelderMead)(nil)),
		"NeverTerminate":     reflect.ValueOf((*optimize.NeverTerminate)(nil)),
		"Newton":             reflect.ValueOf((*optimize.Newton)(nil)),
		"NextDirectioner":    reflect.ValueOf((*optimize.NextDirectioner)(nil)),
		"Operation":          reflect.ValueOf((*optimize.Operation)(nil)),
		"PolakRibierePolyak": reflect.ValueOf((*optimize.PolakRibierePolyak)(nil)),
		"Printer":            reflect.ValueOf((*optimize.Printer)(nil)),
		"Problem":            reflect.ValueOf((*optimize.Problem)(nil)),
		"QuadraticStepSize":  reflect.ValueOf((*optimize.QuadraticStepSize)(nil)),
		"Recorder":           reflect.ValueOf((*optimize.Recorder)(nil)),
		"Result":             reflect.ValueOf((*optimize.Result)(nil)),
		"Settings":           reflect.ValueOf((*optimize.Settings)(nil)),
		"Stats":              reflect.ValueOf((*optimize.Stats)(nil)),
		"Status":             reflect.ValueOf((*optimize.Status)(nil)),
		"Statuser":           reflect.ValueOf((*optimize.Statuser)(nil)),
		"StepSizer":          reflect.ValueOf((*optimize.StepSizer)(nil)),
		"Task":               reflect.ValueOf((*optimize.Task)(nil)),

		// interface wrapper definitions
		"_CGVariant":       reflect.ValueOf((*_gonum_org_v1_gonum_optimize_CGVariant)(nil)),
		"_Converger":       reflect.ValueOf((*_gonum_org_v1_gonum_optimize_Converger)(nil)),
		"_Linesearcher":    reflect.ValueOf((*_gonum_org_v1_gonum_optimize_Linesearcher)(nil)),
		"_Method":          reflect.ValueOf((*_gonum_org_v1_gonum_optimize_Method)(nil)),
		"_NextDirectioner": reflect.ValueOf((*_gonum_org_v1_gonum_optimize_NextDirectioner)(nil)),
		"_Recorder":        reflect.ValueOf((*_gonum_org_v1_gonum_optimize_Recorder)(nil)),
		"_Statuser":        reflect.ValueOf((*_gonum_org_v1_gonum_optimize_Statuser)(nil)),
		"_StepSizer":       reflect.ValueOf((*_gonum_org_v1_gonum_optimize_StepSizer)(nil)),
	}
}

// _gonum_org_v1_gonum_optimize_CGVariant is an interface wrapper for CGVariant type
type _gonum_org_v1_gonum_optimize_CGVariant struct {
	WBeta func(grad []float64, gradPrev []float64, dirPrev []float64) float64
	WInit func(loc *optimize.Location)
}

func (W _gonum_org_v1_gonum_optimize_CGVariant) Beta(grad []float64, gradPrev []float64, dirPrev []float64) float64 {
	return W.WBeta(grad, gradPrev, dirPrev)
}
func (W _gonum_org_v1_gonum_optimize_CGVariant) Init(loc *optimize.Location) { W.WInit(loc) }

// _gonum_org_v1_gonum_optimize_Converger is an interface wrapper for Converger type
type _gonum_org_v1_gonum_optimize_Converger struct {
	WConverged func(loc *optimize.Location) optimize.Status
	WInit      func(dim int)
}

func (W _gonum_org_v1_gonum_optimize_Converger) Converged(loc *optimize.Location) optimize.Status {
	return W.WConverged(loc)
}
func (W _gonum_org_v1_gonum_optimize_Converger) Init(dim int) { W.WInit(dim) }

// _gonum_org_v1_gonum_optimize_Linesearcher is an interface wrapper for Linesearcher type
type _gonum_org_v1_gonum_optimize_Linesearcher struct {
	WInit    func(value float64, derivative float64, step float64) optimize.Operation
	WIterate func(value float64, derivative float64) (op optimize.Operation, step float64, err error)
}

func (W _gonum_org_v1_gonum_optimize_Linesearcher) Init(value float64, derivative float64, step float64) optimize.Operation {
	return W.WInit(value, derivative, step)
}
func (W _gonum_org_v1_gonum_optimize_Linesearcher) Iterate(value float64, derivative float64) (op optimize.Operation, step float64, err error) {
	return W.WIterate(value, derivative)
}

// _gonum_org_v1_gonum_optimize_Method is an interface wrapper for Method type
type _gonum_org_v1_gonum_optimize_Method struct {
	WInit func(dim int, tasks int) (concurrent int)
	WRun  func(operation chan<- optimize.Task, result <-chan optimize.Task, tasks []optimize.Task)
	WUses func(has optimize.Available) (uses optimize.Available, err error)
}

func (W _gonum_org_v1_gonum_optimize_Method) Init(dim int, tasks int) (concurrent int) {
	return W.WInit(dim, tasks)
}
func (W _gonum_org_v1_gonum_optimize_Method) Run(operation chan<- optimize.Task, result <-chan optimize.Task, tasks []optimize.Task) {
	W.WRun(operation, result, tasks)
}
func (W _gonum_org_v1_gonum_optimize_Method) Uses(has optimize.Available) (uses optimize.Available, err error) {
	return W.WUses(has)
}

// _gonum_org_v1_gonum_optimize_NextDirectioner is an interface wrapper for NextDirectioner type
type _gonum_org_v1_gonum_optimize_NextDirectioner struct {
	WInitDirection func(loc *optimize.Location, dir []float64) (step float64)
	WNextDirection func(loc *optimize.Location, dir []float64) (step float64)
}

func (W _gonum_org_v1_gonum_optimize_NextDirectioner) InitDirection(loc *optimize.Location, dir []float64) (step float64) {
	return W.WInitDirection(loc, dir)
}
func (W _gonum_org_v1_gonum_optimize_NextDirectioner) NextDirection(loc *optimize.Location, dir []float64) (step float64) {
	return W.WNextDirection(loc, dir)
}

// _gonum_org_v1_gonum_optimize_Recorder is an interface wrapper for Recorder type
type _gonum_org_v1_gonum_optimize_Recorder struct {
	WInit   func() error
	WRecord func(a0 *optimize.Location, a1 optimize.Operation, a2 *optimize.Stats) error
}

func (W _gonum_org_v1_gonum_optimize_Recorder) Init() error { return W.WInit() }
func (W _gonum_org_v1_gonum_optimize_Recorder) Record(a0 *optimize.Location, a1 optimize.Operation, a2 *optimize.Stats) error {
	return W.WRecord(a0, a1, a2)
}

// _gonum_org_v1_gonum_optimize_Statuser is an interface wrapper for Statuser type
type _gonum_org_v1_gonum_optimize_Statuser struct {
	WStatus func() (optimize.Status, error)
}

func (W _gonum_org_v1_gonum_optimize_Statuser) Status() (optimize.Status, error) { return W.WStatus() }

// _gonum_org_v1_gonum_optimize_StepSizer is an interface wrapper for StepSizer type
type _gonum_org_v1_gonum_optimize_StepSizer struct {
	WInit     func(loc *optimize.Location, dir []float64) float64
	WStepSize func(loc *optimize.Location, dir []float64) float64
}

func (W _gonum_org_v1_gonum_optimize_StepSizer) Init(loc *optimize.Location, dir []float64) float64 {
	return W.WInit(loc, dir)
}
func (W _gonum_org_v1_gonum_optimize_StepSizer) StepSize(loc *optimize.Location, dir []float64) float64 {
	return W.WStepSize(loc, dir)
}
