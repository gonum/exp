// Code generated by 'github.com/containous/yaegi/extract gonum.org/v1/gonum/diff/fd'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.15,!go1.16

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/diff/fd"
)

func init() {
	Symbols["gonum.org/v1/gonum/diff/fd"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Backward":       reflect.ValueOf(&fd.Backward).Elem(),
		"Backward2nd":    reflect.ValueOf(&fd.Backward2nd).Elem(),
		"Central":        reflect.ValueOf(&fd.Central).Elem(),
		"Central2nd":     reflect.ValueOf(&fd.Central2nd).Elem(),
		"CrossLaplacian": reflect.ValueOf(fd.CrossLaplacian),
		"Derivative":     reflect.ValueOf(fd.Derivative),
		"Forward":        reflect.ValueOf(&fd.Forward).Elem(),
		"Forward2nd":     reflect.ValueOf(&fd.Forward2nd).Elem(),
		"Gradient":       reflect.ValueOf(fd.Gradient),
		"Hessian":        reflect.ValueOf(fd.Hessian),
		"Jacobian":       reflect.ValueOf(fd.Jacobian),
		"Laplacian":      reflect.ValueOf(fd.Laplacian),

		// type definitions
		"Formula":          reflect.ValueOf((*fd.Formula)(nil)),
		"JacobianSettings": reflect.ValueOf((*fd.JacobianSettings)(nil)),
		"Point":            reflect.ValueOf((*fd.Point)(nil)),
		"Settings":         reflect.ValueOf((*fd.Settings)(nil)),
	}
}
