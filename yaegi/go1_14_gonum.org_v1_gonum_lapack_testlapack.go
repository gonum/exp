// Code generated by 'goexports gonum.org/v1/gonum/lapack/testlapack'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.14,!go1.15

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/blas"
	"gonum.org/v1/gonum/lapack"
	"gonum.org/v1/gonum/lapack/testlapack"
)

func init() {
	Symbols["gonum.org/v1/gonum/lapack/testlapack"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DbdsqrTest":       reflect.ValueOf(testlapack.DbdsqrTest),
		"DcombssqTest":     reflect.ValueOf(testlapack.DcombssqTest),
		"DgebakTest":       reflect.ValueOf(testlapack.DgebakTest),
		"DgebalTest":       reflect.ValueOf(testlapack.DgebalTest),
		"Dgebd2Test":       reflect.ValueOf(testlapack.Dgebd2Test),
		"DgebrdTest":       reflect.ValueOf(testlapack.DgebrdTest),
		"DgeconTest":       reflect.ValueOf(testlapack.DgeconTest),
		"DgeevBenchmark":   reflect.ValueOf(testlapack.DgeevBenchmark),
		"DgeevTest":        reflect.ValueOf(testlapack.DgeevTest),
		"Dgehd2Test":       reflect.ValueOf(testlapack.Dgehd2Test),
		"DgehrdTest":       reflect.ValueOf(testlapack.DgehrdTest),
		"Dgelq2Test":       reflect.ValueOf(testlapack.Dgelq2Test),
		"DgelqfTest":       reflect.ValueOf(testlapack.DgelqfTest),
		"DgelsTest":        reflect.ValueOf(testlapack.DgelsTest),
		"Dgeql2Test":       reflect.ValueOf(testlapack.Dgeql2Test),
		"Dgeqp3Test":       reflect.ValueOf(testlapack.Dgeqp3Test),
		"Dgeqr2Test":       reflect.ValueOf(testlapack.Dgeqr2Test),
		"DgeqrfTest":       reflect.ValueOf(testlapack.DgeqrfTest),
		"Dgerq2Test":       reflect.ValueOf(testlapack.Dgerq2Test),
		"DgerqfTest":       reflect.ValueOf(testlapack.DgerqfTest),
		"DgesvdTest":       reflect.ValueOf(testlapack.DgesvdTest),
		"Dgetf2Test":       reflect.ValueOf(testlapack.Dgetf2Test),
		"DgetrfTest":       reflect.ValueOf(testlapack.DgetrfTest),
		"DgetriTest":       reflect.ValueOf(testlapack.DgetriTest),
		"DgetrsTest":       reflect.ValueOf(testlapack.DgetrsTest),
		"Dggsvd3Test":      reflect.ValueOf(testlapack.Dggsvd3Test),
		"Dggsvp3Test":      reflect.ValueOf(testlapack.Dggsvp3Test),
		"DhseqrTest":       reflect.ValueOf(testlapack.DhseqrTest),
		"DlabrdTest":       reflect.ValueOf(testlapack.DlabrdTest),
		"Dlacn2Test":       reflect.ValueOf(testlapack.Dlacn2Test),
		"DlacpyTest":       reflect.ValueOf(testlapack.DlacpyTest),
		"Dlae2Test":        reflect.ValueOf(testlapack.Dlae2Test),
		"Dlaev2Test":       reflect.ValueOf(testlapack.Dlaev2Test),
		"DlaexcTest":       reflect.ValueOf(testlapack.DlaexcTest),
		"Dlagge":           reflect.ValueOf(testlapack.Dlagge),
		"Dlags2Test":       reflect.ValueOf(testlapack.Dlags2Test),
		"Dlagsy":           reflect.ValueOf(testlapack.Dlagsy),
		"DlahqrTest":       reflect.ValueOf(testlapack.DlahqrTest),
		"Dlahr2Test":       reflect.ValueOf(testlapack.Dlahr2Test),
		"Dlaln2Test":       reflect.ValueOf(testlapack.Dlaln2Test),
		"DlangeTest":       reflect.ValueOf(testlapack.DlangeTest),
		"DlansbTest":       reflect.ValueOf(testlapack.DlansbTest),
		"DlanstTest":       reflect.ValueOf(testlapack.DlanstTest),
		"DlansyTest":       reflect.ValueOf(testlapack.DlansyTest),
		"DlantrTest":       reflect.ValueOf(testlapack.DlantrTest),
		"Dlanv2Test":       reflect.ValueOf(testlapack.Dlanv2Test),
		"DlapllTest":       reflect.ValueOf(testlapack.DlapllTest),
		"DlapmtTest":       reflect.ValueOf(testlapack.DlapmtTest),
		"Dlapy2Test":       reflect.ValueOf(testlapack.Dlapy2Test),
		"Dlaqp2Test":       reflect.ValueOf(testlapack.Dlaqp2Test),
		"DlaqpsTest":       reflect.ValueOf(testlapack.DlaqpsTest),
		"Dlaqr04Test":      reflect.ValueOf(testlapack.Dlaqr04Test),
		"Dlaqr1Test":       reflect.ValueOf(testlapack.Dlaqr1Test),
		"Dlaqr23Test":      reflect.ValueOf(testlapack.Dlaqr23Test),
		"Dlaqr5Test":       reflect.ValueOf(testlapack.Dlaqr5Test),
		"DlarfTest":        reflect.ValueOf(testlapack.DlarfTest),
		"DlarfbTest":       reflect.ValueOf(testlapack.DlarfbTest),
		"DlarfgTest":       reflect.ValueOf(testlapack.DlarfgTest),
		"DlarftTest":       reflect.ValueOf(testlapack.DlarftTest),
		"DlarfxTest":       reflect.ValueOf(testlapack.DlarfxTest),
		"DlartgTest":       reflect.ValueOf(testlapack.DlartgTest),
		"Dlas2Test":        reflect.ValueOf(testlapack.Dlas2Test),
		"DlasclTest":       reflect.ValueOf(testlapack.DlasclTest),
		"DlasetTest":       reflect.ValueOf(testlapack.DlasetTest),
		"Dlasq1Test":       reflect.ValueOf(testlapack.Dlasq1Test),
		"Dlasq2Test":       reflect.ValueOf(testlapack.Dlasq2Test),
		"DlasrTest":        reflect.ValueOf(testlapack.DlasrTest),
		"DlasrtTest":       reflect.ValueOf(testlapack.DlasrtTest),
		"DlassqTest":       reflect.ValueOf(testlapack.DlassqTest),
		"Dlasv2Test":       reflect.ValueOf(testlapack.Dlasv2Test),
		"DlaswpTest":       reflect.ValueOf(testlapack.DlaswpTest),
		"Dlasy2Test":       reflect.ValueOf(testlapack.Dlasy2Test),
		"DlatbsTest":       reflect.ValueOf(testlapack.DlatbsTest),
		"Dlatm1":           reflect.ValueOf(testlapack.Dlatm1),
		"DlatrdTest":       reflect.ValueOf(testlapack.DlatrdTest),
		"DlatrsTest":       reflect.ValueOf(testlapack.DlatrsTest),
		"Dlauu2Test":       reflect.ValueOf(testlapack.Dlauu2Test),
		"DlauumTest":       reflect.ValueOf(testlapack.DlauumTest),
		"Dorg2lTest":       reflect.ValueOf(testlapack.Dorg2lTest),
		"Dorg2rTest":       reflect.ValueOf(testlapack.Dorg2rTest),
		"DorgbrTest":       reflect.ValueOf(testlapack.DorgbrTest),
		"DorghrTest":       reflect.ValueOf(testlapack.DorghrTest),
		"Dorgl2Test":       reflect.ValueOf(testlapack.Dorgl2Test),
		"DorglqTest":       reflect.ValueOf(testlapack.DorglqTest),
		"DorgqlTest":       reflect.ValueOf(testlapack.DorgqlTest),
		"DorgqrTest":       reflect.ValueOf(testlapack.DorgqrTest),
		"DorgtrTest":       reflect.ValueOf(testlapack.DorgtrTest),
		"Dorm2rTest":       reflect.ValueOf(testlapack.Dorm2rTest),
		"DormbrTest":       reflect.ValueOf(testlapack.DormbrTest),
		"DormhrTest":       reflect.ValueOf(testlapack.DormhrTest),
		"Dorml2Test":       reflect.ValueOf(testlapack.Dorml2Test),
		"DormlqTest":       reflect.ValueOf(testlapack.DormlqTest),
		"DormqrTest":       reflect.ValueOf(testlapack.DormqrTest),
		"Dormr2Test":       reflect.ValueOf(testlapack.Dormr2Test),
		"DpbconTest":       reflect.ValueOf(testlapack.DpbconTest),
		"Dpbtf2Test":       reflect.ValueOf(testlapack.Dpbtf2Test),
		"DpbtrfTest":       reflect.ValueOf(testlapack.DpbtrfTest),
		"DpbtrsTest":       reflect.ValueOf(testlapack.DpbtrsTest),
		"DpoconTest":       reflect.ValueOf(testlapack.DpoconTest),
		"Dpotf2Test":       reflect.ValueOf(testlapack.Dpotf2Test),
		"DpotrfTest":       reflect.ValueOf(testlapack.DpotrfTest),
		"DpotriTest":       reflect.ValueOf(testlapack.DpotriTest),
		"DpotrsTest":       reflect.ValueOf(testlapack.DpotrsTest),
		"DrsclTest":        reflect.ValueOf(testlapack.DrsclTest),
		"DsteqrTest":       reflect.ValueOf(testlapack.DsteqrTest),
		"DsterfTest":       reflect.ValueOf(testlapack.DsterfTest),
		"DsyevTest":        reflect.ValueOf(testlapack.DsyevTest),
		"Dsytd2Test":       reflect.ValueOf(testlapack.Dsytd2Test),
		"DsytrdTest":       reflect.ValueOf(testlapack.DsytrdTest),
		"DtgsjaTest":       reflect.ValueOf(testlapack.DtgsjaTest),
		"DtrconTest":       reflect.ValueOf(testlapack.DtrconTest),
		"Dtrevc3Test":      reflect.ValueOf(testlapack.Dtrevc3Test),
		"DtrexcTest":       reflect.ValueOf(testlapack.DtrexcTest),
		"Dtrti2Test":       reflect.ValueOf(testlapack.Dtrti2Test),
		"DtrtriTest":       reflect.ValueOf(testlapack.DtrtriTest),
		"IladlcTest":       reflect.ValueOf(testlapack.IladlcTest),
		"IladlrTest":       reflect.ValueOf(testlapack.IladlrTest),
		"NewAntisymRandom": reflect.ValueOf(testlapack.NewAntisymRandom),

		// type definitions
		"A123":          reflect.ValueOf((*testlapack.A123)(nil)),
		"AntisymRandom": reflect.ValueOf((*testlapack.AntisymRandom)(nil)),
		"Circulant":     reflect.ValueOf((*testlapack.Circulant)(nil)),
		"Clement":       reflect.ValueOf((*testlapack.Clement)(nil)),
		"Creation":      reflect.ValueOf((*testlapack.Creation)(nil)),
		"Dbdsqrer":      reflect.ValueOf((*testlapack.Dbdsqrer)(nil)),
		"Dcombssqer":    reflect.ValueOf((*testlapack.Dcombssqer)(nil)),
		"Dgebaker":      reflect.ValueOf((*testlapack.Dgebaker)(nil)),
		"Dgebaler":      reflect.ValueOf((*testlapack.Dgebaler)(nil)),
		"Dgebd2er":      reflect.ValueOf((*testlapack.Dgebd2er)(nil)),
		"Dgebrder":      reflect.ValueOf((*testlapack.Dgebrder)(nil)),
		"Dgeconer":      reflect.ValueOf((*testlapack.Dgeconer)(nil)),
		"Dgeever":       reflect.ValueOf((*testlapack.Dgeever)(nil)),
		"Dgehd2er":      reflect.ValueOf((*testlapack.Dgehd2er)(nil)),
		"Dgehrder":      reflect.ValueOf((*testlapack.Dgehrder)(nil)),
		"Dgelq2er":      reflect.ValueOf((*testlapack.Dgelq2er)(nil)),
		"Dgelqfer":      reflect.ValueOf((*testlapack.Dgelqfer)(nil)),
		"Dgelser":       reflect.ValueOf((*testlapack.Dgelser)(nil)),
		"Dgeql2er":      reflect.ValueOf((*testlapack.Dgeql2er)(nil)),
		"Dgeqp3er":      reflect.ValueOf((*testlapack.Dgeqp3er)(nil)),
		"Dgeqr2er":      reflect.ValueOf((*testlapack.Dgeqr2er)(nil)),
		"Dgeqrfer":      reflect.ValueOf((*testlapack.Dgeqrfer)(nil)),
		"Dgerq2er":      reflect.ValueOf((*testlapack.Dgerq2er)(nil)),
		"Dgerqfer":      reflect.ValueOf((*testlapack.Dgerqfer)(nil)),
		"Dgesvder":      reflect.ValueOf((*testlapack.Dgesvder)(nil)),
		"Dgetf2er":      reflect.ValueOf((*testlapack.Dgetf2er)(nil)),
		"Dgetrfer":      reflect.ValueOf((*testlapack.Dgetrfer)(nil)),
		"Dgetrier":      reflect.ValueOf((*testlapack.Dgetrier)(nil)),
		"Dgetrser":      reflect.ValueOf((*testlapack.Dgetrser)(nil)),
		"Dggsvd3er":     reflect.ValueOf((*testlapack.Dggsvd3er)(nil)),
		"Dggsvp3er":     reflect.ValueOf((*testlapack.Dggsvp3er)(nil)),
		"Dhseqrer":      reflect.ValueOf((*testlapack.Dhseqrer)(nil)),
		"Diagonal":      reflect.ValueOf((*testlapack.Diagonal)(nil)),
		"Dlabrder":      reflect.ValueOf((*testlapack.Dlabrder)(nil)),
		"Dlacn2er":      reflect.ValueOf((*testlapack.Dlacn2er)(nil)),
		"Dlacpyer":      reflect.ValueOf((*testlapack.Dlacpyer)(nil)),
		"Dlae2er":       reflect.ValueOf((*testlapack.Dlae2er)(nil)),
		"Dlaev2er":      reflect.ValueOf((*testlapack.Dlaev2er)(nil)),
		"Dlaexcer":      reflect.ValueOf((*testlapack.Dlaexcer)(nil)),
		"Dlags2er":      reflect.ValueOf((*testlapack.Dlags2er)(nil)),
		"Dlahqrer":      reflect.ValueOf((*testlapack.Dlahqrer)(nil)),
		"Dlahr2er":      reflect.ValueOf((*testlapack.Dlahr2er)(nil)),
		"Dlaln2er":      reflect.ValueOf((*testlapack.Dlaln2er)(nil)),
		"Dlanger":       reflect.ValueOf((*testlapack.Dlanger)(nil)),
		"Dlansber":      reflect.ValueOf((*testlapack.Dlansber)(nil)),
		"Dlanster":      reflect.ValueOf((*testlapack.Dlanster)(nil)),
		"Dlansyer":      reflect.ValueOf((*testlapack.Dlansyer)(nil)),
		"Dlantrer":      reflect.ValueOf((*testlapack.Dlantrer)(nil)),
		"Dlanv2er":      reflect.ValueOf((*testlapack.Dlanv2er)(nil)),
		"Dlapller":      reflect.ValueOf((*testlapack.Dlapller)(nil)),
		"Dlapmter":      reflect.ValueOf((*testlapack.Dlapmter)(nil)),
		"Dlapy2er":      reflect.ValueOf((*testlapack.Dlapy2er)(nil)),
		"Dlaqp2er":      reflect.ValueOf((*testlapack.Dlaqp2er)(nil)),
		"Dlaqpser":      reflect.ValueOf((*testlapack.Dlaqpser)(nil)),
		"Dlaqr04er":     reflect.ValueOf((*testlapack.Dlaqr04er)(nil)),
		"Dlaqr1er":      reflect.ValueOf((*testlapack.Dlaqr1er)(nil)),
		"Dlaqr23er":     reflect.ValueOf((*testlapack.Dlaqr23er)(nil)),
		"Dlaqr5er":      reflect.ValueOf((*testlapack.Dlaqr5er)(nil)),
		"Dlarfber":      reflect.ValueOf((*testlapack.Dlarfber)(nil)),
		"Dlarfer":       reflect.ValueOf((*testlapack.Dlarfer)(nil)),
		"Dlarfger":      reflect.ValueOf((*testlapack.Dlarfger)(nil)),
		"Dlarfter":      reflect.ValueOf((*testlapack.Dlarfter)(nil)),
		"Dlarfxer":      reflect.ValueOf((*testlapack.Dlarfxer)(nil)),
		"Dlartger":      reflect.ValueOf((*testlapack.Dlartger)(nil)),
		"Dlas2er":       reflect.ValueOf((*testlapack.Dlas2er)(nil)),
		"Dlascler":      reflect.ValueOf((*testlapack.Dlascler)(nil)),
		"Dlaseter":      reflect.ValueOf((*testlapack.Dlaseter)(nil)),
		"Dlasq1er":      reflect.ValueOf((*testlapack.Dlasq1er)(nil)),
		"Dlasq2er":      reflect.ValueOf((*testlapack.Dlasq2er)(nil)),
		"Dlasrer":       reflect.ValueOf((*testlapack.Dlasrer)(nil)),
		"Dlasrter":      reflect.ValueOf((*testlapack.Dlasrter)(nil)),
		"Dlassqer":      reflect.ValueOf((*testlapack.Dlassqer)(nil)),
		"Dlasv2er":      reflect.ValueOf((*testlapack.Dlasv2er)(nil)),
		"Dlaswper":      reflect.ValueOf((*testlapack.Dlaswper)(nil)),
		"Dlasy2er":      reflect.ValueOf((*testlapack.Dlasy2er)(nil)),
		"Dlatbser":      reflect.ValueOf((*testlapack.Dlatbser)(nil)),
		"Dlatrder":      reflect.ValueOf((*testlapack.Dlatrder)(nil)),
		"Dlatrser":      reflect.ValueOf((*testlapack.Dlatrser)(nil)),
		"Dlauu2er":      reflect.ValueOf((*testlapack.Dlauu2er)(nil)),
		"Dlauumer":      reflect.ValueOf((*testlapack.Dlauumer)(nil)),
		"Dorg2ler":      reflect.ValueOf((*testlapack.Dorg2ler)(nil)),
		"Dorg2rer":      reflect.ValueOf((*testlapack.Dorg2rer)(nil)),
		"Dorgbrer":      reflect.ValueOf((*testlapack.Dorgbrer)(nil)),
		"Dorghrer":      reflect.ValueOf((*testlapack.Dorghrer)(nil)),
		"Dorgl2er":      reflect.ValueOf((*testlapack.Dorgl2er)(nil)),
		"Dorglqer":      reflect.ValueOf((*testlapack.Dorglqer)(nil)),
		"Dorgqler":      reflect.ValueOf((*testlapack.Dorgqler)(nil)),
		"Dorgqrer":      reflect.ValueOf((*testlapack.Dorgqrer)(nil)),
		"Dorgtrer":      reflect.ValueOf((*testlapack.Dorgtrer)(nil)),
		"Dorm2rer":      reflect.ValueOf((*testlapack.Dorm2rer)(nil)),
		"Dormbrer":      reflect.ValueOf((*testlapack.Dormbrer)(nil)),
		"Dormhrer":      reflect.ValueOf((*testlapack.Dormhrer)(nil)),
		"Dorml2er":      reflect.ValueOf((*testlapack.Dorml2er)(nil)),
		"Dormlqer":      reflect.ValueOf((*testlapack.Dormlqer)(nil)),
		"Dormqrer":      reflect.ValueOf((*testlapack.Dormqrer)(nil)),
		"Dormr2er":      reflect.ValueOf((*testlapack.Dormr2er)(nil)),
		"Downshift":     reflect.ValueOf((*testlapack.Downshift)(nil)),
		"Dpbconer":      reflect.ValueOf((*testlapack.Dpbconer)(nil)),
		"Dpbtf2er":      reflect.ValueOf((*testlapack.Dpbtf2er)(nil)),
		"Dpbtrfer":      reflect.ValueOf((*testlapack.Dpbtrfer)(nil)),
		"Dpbtrser":      reflect.ValueOf((*testlapack.Dpbtrser)(nil)),
		"Dpoconer":      reflect.ValueOf((*testlapack.Dpoconer)(nil)),
		"Dpotf2er":      reflect.ValueOf((*testlapack.Dpotf2er)(nil)),
		"Dpotrfer":      reflect.ValueOf((*testlapack.Dpotrfer)(nil)),
		"Dpotrier":      reflect.ValueOf((*testlapack.Dpotrier)(nil)),
		"Dpotrser":      reflect.ValueOf((*testlapack.Dpotrser)(nil)),
		"Drscler":       reflect.ValueOf((*testlapack.Drscler)(nil)),
		"Dsteqrer":      reflect.ValueOf((*testlapack.Dsteqrer)(nil)),
		"Dsterfer":      reflect.ValueOf((*testlapack.Dsterfer)(nil)),
		"Dsyever":       reflect.ValueOf((*testlapack.Dsyever)(nil)),
		"Dsytd2er":      reflect.ValueOf((*testlapack.Dsytd2er)(nil)),
		"Dsytrder":      reflect.ValueOf((*testlapack.Dsytrder)(nil)),
		"Dtgsjaer":      reflect.ValueOf((*testlapack.Dtgsjaer)(nil)),
		"Dtrconer":      reflect.ValueOf((*testlapack.Dtrconer)(nil)),
		"Dtrevc3er":     reflect.ValueOf((*testlapack.Dtrevc3er)(nil)),
		"Dtrexcer":      reflect.ValueOf((*testlapack.Dtrexcer)(nil)),
		"Dtrti2er":      reflect.ValueOf((*testlapack.Dtrti2er)(nil)),
		"Dtrtrier":      reflect.ValueOf((*testlapack.Dtrtrier)(nil)),
		"Fibonacci":     reflect.ValueOf((*testlapack.Fibonacci)(nil)),
		"Gear":          reflect.ValueOf((*testlapack.Gear)(nil)),
		"Grcar":         reflect.ValueOf((*testlapack.Grcar)(nil)),
		"Hanowa":        reflect.ValueOf((*testlapack.Hanowa)(nil)),
		"Iladlcer":      reflect.ValueOf((*testlapack.Iladlcer)(nil)),
		"Iladlrer":      reflect.ValueOf((*testlapack.Iladlrer)(nil)),
		"Lesp":          reflect.ValueOf((*testlapack.Lesp)(nil)),
		"Rutis":         reflect.ValueOf((*testlapack.Rutis)(nil)),
		"Tris":          reflect.ValueOf((*testlapack.Tris)(nil)),
		"Wilk12":        reflect.ValueOf((*testlapack.Wilk12)(nil)),
		"Wilk20":        reflect.ValueOf((*testlapack.Wilk20)(nil)),
		"Wilk4":         reflect.ValueOf((*testlapack.Wilk4)(nil)),
		"Zero":          reflect.ValueOf((*testlapack.Zero)(nil)),

		// interface wrapper definitions
		"_Dbdsqrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dbdsqrer)(nil)),
		"_Dcombssqer": reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dcombssqer)(nil)),
		"_Dgebaker":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgebaker)(nil)),
		"_Dgebaler":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgebaler)(nil)),
		"_Dgebd2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgebd2er)(nil)),
		"_Dgebrder":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgebrder)(nil)),
		"_Dgeconer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgeconer)(nil)),
		"_Dgeever":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgeever)(nil)),
		"_Dgehd2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgehd2er)(nil)),
		"_Dgehrder":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgehrder)(nil)),
		"_Dgelq2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgelq2er)(nil)),
		"_Dgelqfer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgelqfer)(nil)),
		"_Dgelser":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgelser)(nil)),
		"_Dgeql2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgeql2er)(nil)),
		"_Dgeqp3er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgeqp3er)(nil)),
		"_Dgeqr2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgeqr2er)(nil)),
		"_Dgeqrfer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgeqrfer)(nil)),
		"_Dgerq2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgerq2er)(nil)),
		"_Dgerqfer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgerqfer)(nil)),
		"_Dgesvder":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgesvder)(nil)),
		"_Dgetf2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgetf2er)(nil)),
		"_Dgetrfer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgetrfer)(nil)),
		"_Dgetrier":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgetrier)(nil)),
		"_Dgetrser":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dgetrser)(nil)),
		"_Dggsvd3er":  reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dggsvd3er)(nil)),
		"_Dggsvp3er":  reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dggsvp3er)(nil)),
		"_Dhseqrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dhseqrer)(nil)),
		"_Dlabrder":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlabrder)(nil)),
		"_Dlacn2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlacn2er)(nil)),
		"_Dlacpyer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlacpyer)(nil)),
		"_Dlae2er":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlae2er)(nil)),
		"_Dlaev2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaev2er)(nil)),
		"_Dlaexcer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaexcer)(nil)),
		"_Dlags2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlags2er)(nil)),
		"_Dlahqrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlahqrer)(nil)),
		"_Dlahr2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlahr2er)(nil)),
		"_Dlaln2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaln2er)(nil)),
		"_Dlanger":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlanger)(nil)),
		"_Dlansber":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlansber)(nil)),
		"_Dlanster":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlanster)(nil)),
		"_Dlansyer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlansyer)(nil)),
		"_Dlantrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlantrer)(nil)),
		"_Dlanv2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlanv2er)(nil)),
		"_Dlapller":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlapller)(nil)),
		"_Dlapmter":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlapmter)(nil)),
		"_Dlapy2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlapy2er)(nil)),
		"_Dlaqp2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaqp2er)(nil)),
		"_Dlaqpser":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaqpser)(nil)),
		"_Dlaqr04er":  reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaqr04er)(nil)),
		"_Dlaqr1er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaqr1er)(nil)),
		"_Dlaqr23er":  reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaqr23er)(nil)),
		"_Dlaqr5er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaqr5er)(nil)),
		"_Dlarfber":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlarfber)(nil)),
		"_Dlarfer":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlarfer)(nil)),
		"_Dlarfger":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlarfger)(nil)),
		"_Dlarfter":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlarfter)(nil)),
		"_Dlarfxer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlarfxer)(nil)),
		"_Dlartger":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlartger)(nil)),
		"_Dlas2er":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlas2er)(nil)),
		"_Dlascler":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlascler)(nil)),
		"_Dlaseter":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaseter)(nil)),
		"_Dlasq1er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlasq1er)(nil)),
		"_Dlasq2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlasq2er)(nil)),
		"_Dlasrer":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlasrer)(nil)),
		"_Dlasrter":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlasrter)(nil)),
		"_Dlassqer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlassqer)(nil)),
		"_Dlasv2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlasv2er)(nil)),
		"_Dlaswper":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlaswper)(nil)),
		"_Dlasy2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlasy2er)(nil)),
		"_Dlatbser":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlatbser)(nil)),
		"_Dlatrder":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlatrder)(nil)),
		"_Dlatrser":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlatrser)(nil)),
		"_Dlauu2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlauu2er)(nil)),
		"_Dlauumer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dlauumer)(nil)),
		"_Dorg2ler":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorg2ler)(nil)),
		"_Dorg2rer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorg2rer)(nil)),
		"_Dorgbrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorgbrer)(nil)),
		"_Dorghrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorghrer)(nil)),
		"_Dorgl2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorgl2er)(nil)),
		"_Dorglqer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorglqer)(nil)),
		"_Dorgqler":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorgqler)(nil)),
		"_Dorgqrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorgqrer)(nil)),
		"_Dorgtrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorgtrer)(nil)),
		"_Dorm2rer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorm2rer)(nil)),
		"_Dormbrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dormbrer)(nil)),
		"_Dormhrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dormhrer)(nil)),
		"_Dorml2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dorml2er)(nil)),
		"_Dormlqer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dormlqer)(nil)),
		"_Dormqrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dormqrer)(nil)),
		"_Dormr2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dormr2er)(nil)),
		"_Dpbconer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpbconer)(nil)),
		"_Dpbtf2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpbtf2er)(nil)),
		"_Dpbtrfer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpbtrfer)(nil)),
		"_Dpbtrser":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpbtrser)(nil)),
		"_Dpoconer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpoconer)(nil)),
		"_Dpotf2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpotf2er)(nil)),
		"_Dpotrfer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpotrfer)(nil)),
		"_Dpotrier":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpotrier)(nil)),
		"_Dpotrser":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dpotrser)(nil)),
		"_Drscler":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Drscler)(nil)),
		"_Dsteqrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dsteqrer)(nil)),
		"_Dsterfer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dsterfer)(nil)),
		"_Dsyever":    reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dsyever)(nil)),
		"_Dsytd2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dsytd2er)(nil)),
		"_Dsytrder":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dsytrder)(nil)),
		"_Dtgsjaer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dtgsjaer)(nil)),
		"_Dtrconer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dtrconer)(nil)),
		"_Dtrevc3er":  reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dtrevc3er)(nil)),
		"_Dtrexcer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dtrexcer)(nil)),
		"_Dtrti2er":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dtrti2er)(nil)),
		"_Dtrtrier":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Dtrtrier)(nil)),
		"_Iladlcer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Iladlcer)(nil)),
		"_Iladlrer":   reflect.ValueOf((*_gonum_org_v1_gonum_lapack_testlapack_Iladlrer)(nil)),
	}
}

// _gonum_org_v1_gonum_lapack_testlapack_Dbdsqrer is an interface wrapper for Dbdsqrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dbdsqrer struct {
	WDbdsqr func(uplo blas.Uplo, n int, ncvt int, nru int, ncc int, d []float64, e []float64, vt []float64, ldvt int, u []float64, ldu int, c []float64, ldc int, work []float64) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dbdsqrer) Dbdsqr(uplo blas.Uplo, n int, ncvt int, nru int, ncc int, d []float64, e []float64, vt []float64, ldvt int, u []float64, ldu int, c []float64, ldc int, work []float64) (ok bool) {
	return W.WDbdsqr(uplo, n, ncvt, nru, ncc, d, e, vt, ldvt, u, ldu, c, ldc, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dcombssqer is an interface wrapper for Dcombssqer type
type _gonum_org_v1_gonum_lapack_testlapack_Dcombssqer struct {
	WDcombssq func(scale1 float64, ssq1 float64, scale2 float64, ssq2 float64) (scale float64, ssq float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dcombssqer) Dcombssq(scale1 float64, ssq1 float64, scale2 float64, ssq2 float64) (scale float64, ssq float64) {
	return W.WDcombssq(scale1, ssq1, scale2, ssq2)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgebaker is an interface wrapper for Dgebaker type
type _gonum_org_v1_gonum_lapack_testlapack_Dgebaker struct {
	WDgebak func(job lapack.BalanceJob, side lapack.EVSide, n int, ilo int, ihi int, scale []float64, m int, v []float64, ldv int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgebaker) Dgebak(job lapack.BalanceJob, side lapack.EVSide, n int, ilo int, ihi int, scale []float64, m int, v []float64, ldv int) {
	W.WDgebak(job, side, n, ilo, ihi, scale, m, v, ldv)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgebaler is an interface wrapper for Dgebaler type
type _gonum_org_v1_gonum_lapack_testlapack_Dgebaler struct {
	WDgebal func(job lapack.BalanceJob, n int, a []float64, lda int, scale []float64) (int, int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgebaler) Dgebal(job lapack.BalanceJob, n int, a []float64, lda int, scale []float64) (int, int) {
	return W.WDgebal(job, n, a, lda, scale)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgebd2er is an interface wrapper for Dgebd2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgebd2er struct {
	WDgebd2 func(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgebd2er) Dgebd2(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64) {
	W.WDgebd2(m, n, a, lda, d, e, tauq, taup, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgebrder is an interface wrapper for Dgebrder type
type _gonum_org_v1_gonum_lapack_testlapack_Dgebrder struct {
	WDgebd2 func(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64)
	WDgebrd func(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgebrder) Dgebd2(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64) {
	W.WDgebd2(m, n, a, lda, d, e, tauq, taup, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgebrder) Dgebrd(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int) {
	W.WDgebrd(m, n, a, lda, d, e, tauQ, tauP, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgeconer is an interface wrapper for Dgeconer type
type _gonum_org_v1_gonum_lapack_testlapack_Dgeconer struct {
	WDgecon func(norm lapack.MatrixNorm, n int, a []float64, lda int, anorm float64, work []float64, iwork []int) float64
	WDgetrf func(m int, n int, a []float64, lda int, ipiv []int) bool
	WDgetri func(n int, a []float64, lda int, ipiv []int, work []float64, lwork int) bool
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeconer) Dgecon(norm lapack.MatrixNorm, n int, a []float64, lda int, anorm float64, work []float64, iwork []int) float64 {
	return W.WDgecon(norm, n, a, lda, anorm, work, iwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeconer) Dgetrf(m int, n int, a []float64, lda int, ipiv []int) bool {
	return W.WDgetrf(m, n, a, lda, ipiv)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeconer) Dgetri(n int, a []float64, lda int, ipiv []int, work []float64, lwork int) bool {
	return W.WDgetri(n, a, lda, ipiv, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeconer) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgeever is an interface wrapper for Dgeever type
type _gonum_org_v1_gonum_lapack_testlapack_Dgeever struct {
	WDgeev func(jobvl lapack.LeftEVJob, jobvr lapack.RightEVJob, n int, a []float64, lda int, wr []float64, wi []float64, vl []float64, ldvl int, vr []float64, ldvr int, work []float64, lwork int) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeever) Dgeev(jobvl lapack.LeftEVJob, jobvr lapack.RightEVJob, n int, a []float64, lda int, wr []float64, wi []float64, vl []float64, ldvl int, vr []float64, ldvr int, work []float64, lwork int) int {
	return W.WDgeev(jobvl, jobvr, n, a, lda, wr, wi, vl, ldvl, vr, ldvr, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgehd2er is an interface wrapper for Dgehd2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgehd2er struct {
	WDgehd2 func(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgehd2er) Dgehd2(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgehd2(n, ilo, ihi, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgehrder is an interface wrapper for Dgehrder type
type _gonum_org_v1_gonum_lapack_testlapack_Dgehrder struct {
	WDgehrd func(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgehrder) Dgehrd(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgehrd(n, ilo, ihi, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgehrder) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgelq2er is an interface wrapper for Dgelq2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgelq2er struct {
	WDgelq2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgelq2er) Dgelq2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgelq2(m, n, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgelqfer is an interface wrapper for Dgelqfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dgelqfer struct {
	WDgelq2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgelqf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgelqfer) Dgelq2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgelq2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgelqfer) Dgelqf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgelqf(m, n, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgelser is an interface wrapper for Dgelser type
type _gonum_org_v1_gonum_lapack_testlapack_Dgelser struct {
	WDgels func(trans blas.Transpose, m int, n int, nrhs int, a []float64, lda int, b []float64, ldb int, work []float64, lwork int) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgelser) Dgels(trans blas.Transpose, m int, n int, nrhs int, a []float64, lda int, b []float64, ldb int, work []float64, lwork int) bool {
	return W.WDgels(trans, m, n, nrhs, a, lda, b, ldb, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgeql2er is an interface wrapper for Dgeql2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgeql2er struct {
	WDgeql2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeql2er) Dgeql2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeql2(m, n, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgeqp3er is an interface wrapper for Dgeqp3er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgeqp3er struct {
	WDgeqp3 func(m int, n int, a []float64, lda int, jpvt []int, tau []float64, work []float64, lwork int)
	WDlapmt func(forward bool, m int, n int, x []float64, ldx int, k []int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeqp3er) Dgeqp3(m int, n int, a []float64, lda int, jpvt []int, tau []float64, work []float64, lwork int) {
	W.WDgeqp3(m, n, a, lda, jpvt, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeqp3er) Dlapmt(forward bool, m int, n int, x []float64, ldx int, k []int) {
	W.WDlapmt(forward, m, n, x, ldx, k)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgeqr2er is an interface wrapper for Dgeqr2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgeqr2er struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeqr2er) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgeqrfer is an interface wrapper for Dgeqrfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dgeqrfer struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgeqrf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeqrfer) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgeqrfer) Dgeqrf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgeqrf(m, n, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgerq2er is an interface wrapper for Dgerq2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgerq2er struct {
	WDgerq2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgerq2er) Dgerq2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgerq2(m, n, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgerqfer is an interface wrapper for Dgerqfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dgerqfer struct {
	WDgerqf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgerqfer) Dgerqf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgerqf(m, n, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgesvder is an interface wrapper for Dgesvder type
type _gonum_org_v1_gonum_lapack_testlapack_Dgesvder struct {
	WDgesvd func(jobU lapack.SVDJob, jobVT lapack.SVDJob, m int, n int, a []float64, lda int, s []float64, u []float64, ldu int, vt []float64, ldvt int, work []float64, lwork int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgesvder) Dgesvd(jobU lapack.SVDJob, jobVT lapack.SVDJob, m int, n int, a []float64, lda int, s []float64, u []float64, ldu int, vt []float64, ldvt int, work []float64, lwork int) (ok bool) {
	return W.WDgesvd(jobU, jobVT, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgetf2er is an interface wrapper for Dgetf2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dgetf2er struct {
	WDgetf2 func(m int, n int, a []float64, lda int, ipiv []int) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgetf2er) Dgetf2(m int, n int, a []float64, lda int, ipiv []int) bool {
	return W.WDgetf2(m, n, a, lda, ipiv)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgetrfer is an interface wrapper for Dgetrfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dgetrfer struct {
	WDgetrf func(m int, n int, a []float64, lda int, ipiv []int) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgetrfer) Dgetrf(m int, n int, a []float64, lda int, ipiv []int) bool {
	return W.WDgetrf(m, n, a, lda, ipiv)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgetrier is an interface wrapper for Dgetrier type
type _gonum_org_v1_gonum_lapack_testlapack_Dgetrier struct {
	WDgetrf func(m int, n int, a []float64, lda int, ipiv []int) bool
	WDgetri func(n int, a []float64, lda int, ipiv []int, work []float64, lwork int) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgetrier) Dgetrf(m int, n int, a []float64, lda int, ipiv []int) bool {
	return W.WDgetrf(m, n, a, lda, ipiv)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgetrier) Dgetri(n int, a []float64, lda int, ipiv []int, work []float64, lwork int) bool {
	return W.WDgetri(n, a, lda, ipiv, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dgetrser is an interface wrapper for Dgetrser type
type _gonum_org_v1_gonum_lapack_testlapack_Dgetrser struct {
	WDgetrf func(m int, n int, a []float64, lda int, ipiv []int) bool
	WDgetrs func(trans blas.Transpose, n int, nrhs int, a []float64, lda int, ipiv []int, b []float64, ldb int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dgetrser) Dgetrf(m int, n int, a []float64, lda int, ipiv []int) bool {
	return W.WDgetrf(m, n, a, lda, ipiv)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dgetrser) Dgetrs(trans blas.Transpose, n int, nrhs int, a []float64, lda int, ipiv []int, b []float64, ldb int) {
	W.WDgetrs(trans, n, nrhs, a, lda, ipiv, b, ldb)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dggsvd3er is an interface wrapper for Dggsvd3er type
type _gonum_org_v1_gonum_lapack_testlapack_Dggsvd3er struct {
	WDggsvd3 func(jobU lapack.GSVDJob, jobV lapack.GSVDJob, jobQ lapack.GSVDJob, m int, n int, p int, a []float64, lda int, b []float64, ldb int, alpha []float64, beta []float64, u []float64, ldu int, v []float64, ldv int, q []float64, ldq int, work []float64, lwork int, iwork []int) (k int, l int, ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dggsvd3er) Dggsvd3(jobU lapack.GSVDJob, jobV lapack.GSVDJob, jobQ lapack.GSVDJob, m int, n int, p int, a []float64, lda int, b []float64, ldb int, alpha []float64, beta []float64, u []float64, ldu int, v []float64, ldv int, q []float64, ldq int, work []float64, lwork int, iwork []int) (k int, l int, ok bool) {
	return W.WDggsvd3(jobU, jobV, jobQ, m, n, p, a, lda, b, ldb, alpha, beta, u, ldu, v, ldv, q, ldq, work, lwork, iwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dggsvp3er is an interface wrapper for Dggsvp3er type
type _gonum_org_v1_gonum_lapack_testlapack_Dggsvp3er struct {
	WDggsvp3 func(jobU lapack.GSVDJob, jobV lapack.GSVDJob, jobQ lapack.GSVDJob, m int, p int, n int, a []float64, lda int, b []float64, ldb int, tola float64, tolb float64, u []float64, ldu int, v []float64, ldv int, q []float64, ldq int, iwork []int, tau []float64, work []float64, lwork int) (k int, l int)
	WDlange  func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dggsvp3er) Dggsvp3(jobU lapack.GSVDJob, jobV lapack.GSVDJob, jobQ lapack.GSVDJob, m int, p int, n int, a []float64, lda int, b []float64, ldb int, tola float64, tolb float64, u []float64, ldu int, v []float64, ldv int, q []float64, ldq int, iwork []int, tau []float64, work []float64, lwork int) (k int, l int) {
	return W.WDggsvp3(jobU, jobV, jobQ, m, p, n, a, lda, b, ldb, tola, tolb, u, ldu, v, ldv, q, ldq, iwork, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dggsvp3er) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dhseqrer is an interface wrapper for Dhseqrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dhseqrer struct {
	WDhseqr func(job lapack.SchurJob, compz lapack.SchurComp, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, z []float64, ldz int, work []float64, lwork int) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dhseqrer) Dhseqr(job lapack.SchurJob, compz lapack.SchurComp, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, z []float64, ldz int, work []float64, lwork int) int {
	return W.WDhseqr(job, compz, n, ilo, ihi, h, ldh, wr, wi, z, ldz, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlabrder is an interface wrapper for Dlabrder type
type _gonum_org_v1_gonum_lapack_testlapack_Dlabrder struct {
	WDlabrd func(m int, n int, nb int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, x []float64, ldx int, y []float64, ldy int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlabrder) Dlabrd(m int, n int, nb int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, x []float64, ldx int, y []float64, ldy int) {
	W.WDlabrd(m, n, nb, a, lda, d, e, tauq, taup, x, ldx, y, ldy)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlacn2er is an interface wrapper for Dlacn2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlacn2er struct {
	WDlacn2 func(n int, v []float64, x []float64, isgn []int, est float64, kase int, isave *[3]int) (float64, int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlacn2er) Dlacn2(n int, v []float64, x []float64, isgn []int, est float64, kase int, isave *[3]int) (float64, int) {
	return W.WDlacn2(n, v, x, isgn, est, kase, isave)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlacpyer is an interface wrapper for Dlacpyer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlacpyer struct {
	WDlacpy func(uplo blas.Uplo, m int, n int, a []float64, lda int, b []float64, ldb int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlacpyer) Dlacpy(uplo blas.Uplo, m int, n int, a []float64, lda int, b []float64, ldb int) {
	W.WDlacpy(uplo, m, n, a, lda, b, ldb)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlae2er is an interface wrapper for Dlae2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlae2er struct {
	WDlae2 func(a float64, b float64, c float64) (rt1 float64, rt2 float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlae2er) Dlae2(a float64, b float64, c float64) (rt1 float64, rt2 float64) {
	return W.WDlae2(a, b, c)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaev2er is an interface wrapper for Dlaev2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaev2er struct {
	WDlaev2 func(a float64, b float64, c float64) (rt1 float64, rt2 float64, cs1 float64, sn1 float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaev2er) Dlaev2(a float64, b float64, c float64) (rt1 float64, rt2 float64, cs1 float64, sn1 float64) {
	return W.WDlaev2(a, b, c)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaexcer is an interface wrapper for Dlaexcer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaexcer struct {
	WDlaexc func(wantq bool, n int, t []float64, ldt int, q []float64, ldq int, j1 int, n1 int, n2 int, work []float64) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaexcer) Dlaexc(wantq bool, n int, t []float64, ldt int, q []float64, ldq int, j1 int, n1 int, n2 int, work []float64) bool {
	return W.WDlaexc(wantq, n, t, ldt, q, ldq, j1, n1, n2, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlags2er is an interface wrapper for Dlags2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlags2er struct {
	WDlags2 func(upper bool, a1 float64, a2 float64, a3 float64, b1 float64, b2 float64, b3 float64) (csu float64, snu float64, csv float64, snv float64, csq float64, snq float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlags2er) Dlags2(upper bool, a1 float64, a2 float64, a3 float64, b1 float64, b2 float64, b3 float64) (csu float64, snu float64, csv float64, snv float64, csq float64, snq float64) {
	return W.WDlags2(upper, a1, a2, a3, b1, b2, b3)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlahqrer is an interface wrapper for Dlahqrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlahqrer struct {
	WDlahqr func(wantt bool, wantz bool, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, iloz int, ihiz int, z []float64, ldz int) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlahqrer) Dlahqr(wantt bool, wantz bool, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, iloz int, ihiz int, z []float64, ldz int) int {
	return W.WDlahqr(wantt, wantz, n, ilo, ihi, h, ldh, wr, wi, iloz, ihiz, z, ldz)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlahr2er is an interface wrapper for Dlahr2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlahr2er struct {
	WDlahr2 func(n int, k int, nb int, a []float64, lda int, tau []float64, t []float64, ldt int, y []float64, ldy int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlahr2er) Dlahr2(n int, k int, nb int, a []float64, lda int, tau []float64, t []float64, ldt int, y []float64, ldy int) {
	W.WDlahr2(n, k, nb, a, lda, tau, t, ldt, y, ldy)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaln2er is an interface wrapper for Dlaln2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaln2er struct {
	WDlaln2 func(trans bool, na int, nw int, smin float64, ca float64, a []float64, lda int, d1 float64, d2 float64, b []float64, ldb int, wr float64, wi float64, x []float64, ldx int) (scale float64, xnorm float64, ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaln2er) Dlaln2(trans bool, na int, nw int, smin float64, ca float64, a []float64, lda int, d1 float64, d2 float64, b []float64, ldb int, wr float64, wi float64, x []float64, ldx int) (scale float64, xnorm float64, ok bool) {
	return W.WDlaln2(trans, na, nw, smin, ca, a, lda, d1, d2, b, ldb, wr, wi, x, ldx)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlanger is an interface wrapper for Dlanger type
type _gonum_org_v1_gonum_lapack_testlapack_Dlanger struct {
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlanger) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlansber is an interface wrapper for Dlansber type
type _gonum_org_v1_gonum_lapack_testlapack_Dlansber struct {
	WDlansb func(norm lapack.MatrixNorm, uplo blas.Uplo, n int, kd int, ab []float64, ldab int, work []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlansber) Dlansb(norm lapack.MatrixNorm, uplo blas.Uplo, n int, kd int, ab []float64, ldab int, work []float64) float64 {
	return W.WDlansb(norm, uplo, n, kd, ab, ldab, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlanster is an interface wrapper for Dlanster type
type _gonum_org_v1_gonum_lapack_testlapack_Dlanster struct {
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
	WDlanst func(norm lapack.MatrixNorm, n int, d []float64, e []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlanster) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlanster) Dlanst(norm lapack.MatrixNorm, n int, d []float64, e []float64) float64 {
	return W.WDlanst(norm, n, d, e)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlansyer is an interface wrapper for Dlansyer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlansyer struct {
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
	WDlansy func(norm lapack.MatrixNorm, uplo blas.Uplo, n int, a []float64, lda int, work []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlansyer) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlansyer) Dlansy(norm lapack.MatrixNorm, uplo blas.Uplo, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlansy(norm, uplo, n, a, lda, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlantrer is an interface wrapper for Dlantrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlantrer struct {
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
	WDlantr func(norm lapack.MatrixNorm, uplo blas.Uplo, diag blas.Diag, m int, n int, a []float64, lda int, work []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlantrer) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlantrer) Dlantr(norm lapack.MatrixNorm, uplo blas.Uplo, diag blas.Diag, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlantr(norm, uplo, diag, m, n, a, lda, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlanv2er is an interface wrapper for Dlanv2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlanv2er struct {
	WDlanv2 func(a float64, b float64, c float64, d float64) (aa float64, bb float64, cc float64, dd float64, rt1r float64, rt1i float64, rt2r float64, rt2i float64, cs float64, sn float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlanv2er) Dlanv2(a float64, b float64, c float64, d float64) (aa float64, bb float64, cc float64, dd float64, rt1r float64, rt1i float64, rt2r float64, rt2i float64, cs float64, sn float64) {
	return W.WDlanv2(a, b, c, d)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlapller is an interface wrapper for Dlapller type
type _gonum_org_v1_gonum_lapack_testlapack_Dlapller struct {
	WDgesvd func(jobU lapack.SVDJob, jobVT lapack.SVDJob, m int, n int, a []float64, lda int, s []float64, u []float64, ldu int, vt []float64, ldvt int, work []float64, lwork int) (ok bool)
	WDlapll func(n int, x []float64, incX int, y []float64, incY int) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlapller) Dgesvd(jobU lapack.SVDJob, jobVT lapack.SVDJob, m int, n int, a []float64, lda int, s []float64, u []float64, ldu int, vt []float64, ldvt int, work []float64, lwork int) (ok bool) {
	return W.WDgesvd(jobU, jobVT, m, n, a, lda, s, u, ldu, vt, ldvt, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlapller) Dlapll(n int, x []float64, incX int, y []float64, incY int) float64 {
	return W.WDlapll(n, x, incX, y, incY)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlapmter is an interface wrapper for Dlapmter type
type _gonum_org_v1_gonum_lapack_testlapack_Dlapmter struct {
	WDlapmt func(forward bool, m int, n int, x []float64, ldx int, k []int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlapmter) Dlapmt(forward bool, m int, n int, x []float64, ldx int, k []int) {
	W.WDlapmt(forward, m, n, x, ldx, k)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlapy2er is an interface wrapper for Dlapy2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlapy2er struct {
	WDlapy2 func(a0 float64, a1 float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlapy2er) Dlapy2(a0 float64, a1 float64) float64 {
	return W.WDlapy2(a0, a1)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaqp2er is an interface wrapper for Dlaqp2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaqp2er struct {
	WDlapmt func(forward bool, m int, n int, x []float64, ldx int, k []int)
	WDlaqp2 func(m int, n int, offset int, a []float64, lda int, jpvt []int, tau []float64, vn1 []float64, vn2 []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqp2er) Dlapmt(forward bool, m int, n int, x []float64, ldx int, k []int) {
	W.WDlapmt(forward, m, n, x, ldx, k)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqp2er) Dlaqp2(m int, n int, offset int, a []float64, lda int, jpvt []int, tau []float64, vn1 []float64, vn2 []float64, work []float64) {
	W.WDlaqp2(m, n, offset, a, lda, jpvt, tau, vn1, vn2, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaqpser is an interface wrapper for Dlaqpser type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaqpser struct {
	WDlapmt func(forward bool, m int, n int, x []float64, ldx int, k []int)
	WDlaqps func(m int, n int, offset int, nb int, a []float64, lda int, jpvt []int, tau []float64, vn1 []float64, vn2 []float64, auxv []float64, f []float64, ldf int) (kb int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqpser) Dlapmt(forward bool, m int, n int, x []float64, ldx int, k []int) {
	W.WDlapmt(forward, m, n, x, ldx, k)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqpser) Dlaqps(m int, n int, offset int, nb int, a []float64, lda int, jpvt []int, tau []float64, vn1 []float64, vn2 []float64, auxv []float64, f []float64, ldf int) (kb int) {
	return W.WDlaqps(m, n, offset, nb, a, lda, jpvt, tau, vn1, vn2, auxv, f, ldf)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaqr04er is an interface wrapper for Dlaqr04er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaqr04er struct {
	WDlahqr  func(wantt bool, wantz bool, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, iloz int, ihiz int, z []float64, ldz int) int
	WDlaqr04 func(wantt bool, wantz bool, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, iloz int, ihiz int, z []float64, ldz int, work []float64, lwork int, recur int) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqr04er) Dlahqr(wantt bool, wantz bool, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, iloz int, ihiz int, z []float64, ldz int) int {
	return W.WDlahqr(wantt, wantz, n, ilo, ihi, h, ldh, wr, wi, iloz, ihiz, z, ldz)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqr04er) Dlaqr04(wantt bool, wantz bool, n int, ilo int, ihi int, h []float64, ldh int, wr []float64, wi []float64, iloz int, ihiz int, z []float64, ldz int, work []float64, lwork int, recur int) int {
	return W.WDlaqr04(wantt, wantz, n, ilo, ihi, h, ldh, wr, wi, iloz, ihiz, z, ldz, work, lwork, recur)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaqr1er is an interface wrapper for Dlaqr1er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaqr1er struct {
	WDlaqr1 func(n int, h []float64, ldh int, sr1 float64, si1 float64, sr2 float64, si2 float64, v []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqr1er) Dlaqr1(n int, h []float64, ldh int, sr1 float64, si1 float64, sr2 float64, si2 float64, v []float64) {
	W.WDlaqr1(n, h, ldh, sr1, si1, sr2, si2, v)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaqr23er is an interface wrapper for Dlaqr23er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaqr23er struct {
	WDlaqr23 func(wantt bool, wantz bool, n int, ktop int, kbot int, nw int, h []float64, ldh int, iloz int, ihiz int, z []float64, ldz int, sr []float64, si []float64, v []float64, ldv int, nh int, t []float64, ldt int, nv int, wv []float64, ldwv int, work []float64, lwork int, recur int) (ns int, nd int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqr23er) Dlaqr23(wantt bool, wantz bool, n int, ktop int, kbot int, nw int, h []float64, ldh int, iloz int, ihiz int, z []float64, ldz int, sr []float64, si []float64, v []float64, ldv int, nh int, t []float64, ldt int, nv int, wv []float64, ldwv int, work []float64, lwork int, recur int) (ns int, nd int) {
	return W.WDlaqr23(wantt, wantz, n, ktop, kbot, nw, h, ldh, iloz, ihiz, z, ldz, sr, si, v, ldv, nh, t, ldt, nv, wv, ldwv, work, lwork, recur)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaqr5er is an interface wrapper for Dlaqr5er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaqr5er struct {
	WDlaqr5 func(wantt bool, wantz bool, kacc22 int, n int, ktop int, kbot int, nshfts int, sr []float64, si []float64, h []float64, ldh int, iloz int, ihiz int, z []float64, ldz int, v []float64, ldv int, u []float64, ldu int, nh int, wh []float64, ldwh int, nv int, wv []float64, ldwv int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaqr5er) Dlaqr5(wantt bool, wantz bool, kacc22 int, n int, ktop int, kbot int, nshfts int, sr []float64, si []float64, h []float64, ldh int, iloz int, ihiz int, z []float64, ldz int, v []float64, ldv int, u []float64, ldu int, nh int, wh []float64, ldwh int, nv int, wv []float64, ldwv int) {
	W.WDlaqr5(wantt, wantz, kacc22, n, ktop, kbot, nshfts, sr, si, h, ldh, iloz, ihiz, z, ldz, v, ldv, u, ldu, nh, wh, ldwh, nv, wv, ldwv)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlarfber is an interface wrapper for Dlarfber type
type _gonum_org_v1_gonum_lapack_testlapack_Dlarfber struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDlarfb func(side blas.Side, trans blas.Transpose, direct lapack.Direct, store lapack.StoreV, m int, n int, k int, v []float64, ldv int, t []float64, ldt int, c []float64, ldc int, work []float64, ldwork int)
	WDlarft func(direct lapack.Direct, store lapack.StoreV, n int, k int, v []float64, ldv int, tau []float64, t []float64, ldt int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfber) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfber) Dlarfb(side blas.Side, trans blas.Transpose, direct lapack.Direct, store lapack.StoreV, m int, n int, k int, v []float64, ldv int, t []float64, ldt int, c []float64, ldc int, work []float64, ldwork int) {
	W.WDlarfb(side, trans, direct, store, m, n, k, v, ldv, t, ldt, c, ldc, work, ldwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfber) Dlarft(direct lapack.Direct, store lapack.StoreV, n int, k int, v []float64, ldv int, tau []float64, t []float64, ldt int) {
	W.WDlarft(direct, store, n, k, v, ldv, tau, t, ldt)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlarfer is an interface wrapper for Dlarfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlarfer struct {
	WDlarf func(side blas.Side, m int, n int, v []float64, incv int, tau float64, c []float64, ldc int, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfer) Dlarf(side blas.Side, m int, n int, v []float64, incv int, tau float64, c []float64, ldc int, work []float64) {
	W.WDlarf(side, m, n, v, incv, tau, c, ldc, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlarfger is an interface wrapper for Dlarfger type
type _gonum_org_v1_gonum_lapack_testlapack_Dlarfger struct {
	WDlarfg func(n int, alpha float64, x []float64, incX int) (beta float64, tau float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfger) Dlarfg(n int, alpha float64, x []float64, incX int) (beta float64, tau float64) {
	return W.WDlarfg(n, alpha, x, incX)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlarfter is an interface wrapper for Dlarfter type
type _gonum_org_v1_gonum_lapack_testlapack_Dlarfter struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDlarft func(direct lapack.Direct, store lapack.StoreV, n int, k int, v []float64, ldv int, tau []float64, t []float64, ldt int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfter) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfter) Dlarft(direct lapack.Direct, store lapack.StoreV, n int, k int, v []float64, ldv int, tau []float64, t []float64, ldt int) {
	W.WDlarft(direct, store, n, k, v, ldv, tau, t, ldt)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlarfxer is an interface wrapper for Dlarfxer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlarfxer struct {
	WDlarfx func(side blas.Side, m int, n int, v []float64, tau float64, c []float64, ldc int, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlarfxer) Dlarfx(side blas.Side, m int, n int, v []float64, tau float64, c []float64, ldc int, work []float64) {
	W.WDlarfx(side, m, n, v, tau, c, ldc, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlartger is an interface wrapper for Dlartger type
type _gonum_org_v1_gonum_lapack_testlapack_Dlartger struct {
	WDlartg func(f float64, g float64) (cs float64, sn float64, r float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlartger) Dlartg(f float64, g float64) (cs float64, sn float64, r float64) {
	return W.WDlartg(f, g)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlas2er is an interface wrapper for Dlas2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlas2er struct {
	WDlas2 func(f float64, g float64, h float64) (min float64, max float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlas2er) Dlas2(f float64, g float64, h float64) (min float64, max float64) {
	return W.WDlas2(f, g, h)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlascler is an interface wrapper for Dlascler type
type _gonum_org_v1_gonum_lapack_testlapack_Dlascler struct {
	WDlascl func(kind lapack.MatrixType, kl int, ku int, cfrom float64, cto float64, m int, n int, a []float64, lda int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlascler) Dlascl(kind lapack.MatrixType, kl int, ku int, cfrom float64, cto float64, m int, n int, a []float64, lda int) {
	W.WDlascl(kind, kl, ku, cfrom, cto, m, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaseter is an interface wrapper for Dlaseter type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaseter struct {
	WDlaset func(uplo blas.Uplo, m int, n int, alpha float64, beta float64, a []float64, lda int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaseter) Dlaset(uplo blas.Uplo, m int, n int, alpha float64, beta float64, a []float64, lda int) {
	W.WDlaset(uplo, m, n, alpha, beta, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlasq1er is an interface wrapper for Dlasq1er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlasq1er struct {
	WDgebrd func(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int)
	WDlasq1 func(n int, d []float64, e []float64, work []float64) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasq1er) Dgebrd(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int) {
	W.WDgebrd(m, n, a, lda, d, e, tauQ, tauP, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasq1er) Dlasq1(n int, d []float64, e []float64, work []float64) int {
	return W.WDlasq1(n, d, e, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlasq2er is an interface wrapper for Dlasq2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlasq2er struct {
	WDlasq2 func(n int, z []float64) (info int)
	WDsyev  func(jobz lapack.EVJob, uplo blas.Uplo, n int, a []float64, lda int, w []float64, work []float64, lwork int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasq2er) Dlasq2(n int, z []float64) (info int) {
	return W.WDlasq2(n, z)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasq2er) Dsyev(jobz lapack.EVJob, uplo blas.Uplo, n int, a []float64, lda int, w []float64, work []float64, lwork int) (ok bool) {
	return W.WDsyev(jobz, uplo, n, a, lda, w, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlasrer is an interface wrapper for Dlasrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlasrer struct {
	WDlasr func(side blas.Side, pivot lapack.Pivot, direct lapack.Direct, m int, n int, c []float64, s []float64, a []float64, lda int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasrer) Dlasr(side blas.Side, pivot lapack.Pivot, direct lapack.Direct, m int, n int, c []float64, s []float64, a []float64, lda int) {
	W.WDlasr(side, pivot, direct, m, n, c, s, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlasrter is an interface wrapper for Dlasrter type
type _gonum_org_v1_gonum_lapack_testlapack_Dlasrter struct {
	WDlasrt func(s lapack.Sort, n int, d []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasrter) Dlasrt(s lapack.Sort, n int, d []float64) {
	W.WDlasrt(s, n, d)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlassqer is an interface wrapper for Dlassqer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlassqer struct {
	WDlassq func(n int, x []float64, incx int, scale float64, ssq float64) (float64, float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlassqer) Dlassq(n int, x []float64, incx int, scale float64, ssq float64) (float64, float64) {
	return W.WDlassq(n, x, incx, scale, ssq)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlasv2er is an interface wrapper for Dlasv2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlasv2er struct {
	WDlasv2 func(f float64, g float64, h float64) (ssmin float64, ssmax float64, snr float64, csr float64, snl float64, csl float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasv2er) Dlasv2(f float64, g float64, h float64) (ssmin float64, ssmax float64, snr float64, csr float64, snl float64, csl float64) {
	return W.WDlasv2(f, g, h)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlaswper is an interface wrapper for Dlaswper type
type _gonum_org_v1_gonum_lapack_testlapack_Dlaswper struct {
	WDlaswp func(n int, a []float64, lda int, k1 int, k2 int, ipiv []int, incX int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlaswper) Dlaswp(n int, a []float64, lda int, k1 int, k2 int, ipiv []int, incX int) {
	W.WDlaswp(n, a, lda, k1, k2, ipiv, incX)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlasy2er is an interface wrapper for Dlasy2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlasy2er struct {
	WDlasy2 func(tranl bool, tranr bool, isgn int, n1 int, n2 int, tl []float64, ldtl int, tr []float64, ldtr int, b []float64, ldb int, x []float64, ldx int) (scale float64, xnorm float64, ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlasy2er) Dlasy2(tranl bool, tranr bool, isgn int, n1 int, n2 int, tl []float64, ldtl int, tr []float64, ldtr int, b []float64, ldb int, x []float64, ldx int) (scale float64, xnorm float64, ok bool) {
	return W.WDlasy2(tranl, tranr, isgn, n1, n2, tl, ldtl, tr, ldtr, b, ldb, x, ldx)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlatbser is an interface wrapper for Dlatbser type
type _gonum_org_v1_gonum_lapack_testlapack_Dlatbser struct {
	WDlatbs func(uplo blas.Uplo, trans blas.Transpose, diag blas.Diag, normin bool, n int, kd int, ab []float64, ldab int, x []float64, cnorm []float64) float64
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlatbser) Dlatbs(uplo blas.Uplo, trans blas.Transpose, diag blas.Diag, normin bool, n int, kd int, ab []float64, ldab int, x []float64, cnorm []float64) float64 {
	return W.WDlatbs(uplo, trans, diag, normin, n, kd, ab, ldab, x, cnorm)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlatrder is an interface wrapper for Dlatrder type
type _gonum_org_v1_gonum_lapack_testlapack_Dlatrder struct {
	WDlatrd func(uplo blas.Uplo, n int, nb int, a []float64, lda int, e []float64, tau []float64, w []float64, ldw int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlatrder) Dlatrd(uplo blas.Uplo, n int, nb int, a []float64, lda int, e []float64, tau []float64, w []float64, ldw int) {
	W.WDlatrd(uplo, n, nb, a, lda, e, tau, w, ldw)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlatrser is an interface wrapper for Dlatrser type
type _gonum_org_v1_gonum_lapack_testlapack_Dlatrser struct {
	WDlatrs func(uplo blas.Uplo, trans blas.Transpose, diag blas.Diag, normin bool, n int, a []float64, lda int, x []float64, cnorm []float64) (scale float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlatrser) Dlatrs(uplo blas.Uplo, trans blas.Transpose, diag blas.Diag, normin bool, n int, a []float64, lda int, x []float64, cnorm []float64) (scale float64) {
	return W.WDlatrs(uplo, trans, diag, normin, n, a, lda, x, cnorm)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlauu2er is an interface wrapper for Dlauu2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dlauu2er struct {
	WDlauu2 func(uplo blas.Uplo, n int, a []float64, lda int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlauu2er) Dlauu2(uplo blas.Uplo, n int, a []float64, lda int) {
	W.WDlauu2(uplo, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dlauumer is an interface wrapper for Dlauumer type
type _gonum_org_v1_gonum_lapack_testlapack_Dlauumer struct {
	WDlauum func(uplo blas.Uplo, n int, a []float64, lda int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dlauumer) Dlauum(uplo blas.Uplo, n int, a []float64, lda int) {
	W.WDlauum(uplo, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorg2ler is an interface wrapper for Dorg2ler type
type _gonum_org_v1_gonum_lapack_testlapack_Dorg2ler struct {
	WDgeql2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDorg2l func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorg2ler) Dgeql2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeql2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorg2ler) Dorg2l(m int, n int, k int, a []float64, lda int, tau []float64, work []float64) {
	W.WDorg2l(m, n, k, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorg2rer is an interface wrapper for Dorg2rer type
type _gonum_org_v1_gonum_lapack_testlapack_Dorg2rer struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgeqrf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorg2r func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorg2rer) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorg2rer) Dgeqrf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgeqrf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorg2rer) Dorg2r(m int, n int, k int, a []float64, lda int, tau []float64, work []float64) {
	W.WDorg2r(m, n, k, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorgbrer is an interface wrapper for Dorgbrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dorgbrer struct {
	WDgebd2 func(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64)
	WDgebrd func(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int)
	WDorgbr func(vect lapack.GenOrtho, m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgbrer) Dgebd2(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64) {
	W.WDgebd2(m, n, a, lda, d, e, tauq, taup, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgbrer) Dgebrd(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int) {
	W.WDgebrd(m, n, a, lda, d, e, tauQ, tauP, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgbrer) Dorgbr(vect lapack.GenOrtho, m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgbr(vect, m, n, k, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorghrer is an interface wrapper for Dorghrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dorghrer struct {
	WDgehrd func(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorghr func(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorghrer) Dgehrd(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgehrd(n, ilo, ihi, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorghrer) Dorghr(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorghr(n, ilo, ihi, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorghrer) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorgl2er is an interface wrapper for Dorgl2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dorgl2er struct {
	WDgelq2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgelqf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgl2 func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgl2er) Dgelq2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgelq2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgl2er) Dgelqf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgelqf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgl2er) Dorgl2(m int, n int, k int, a []float64, lda int, tau []float64, work []float64) {
	W.WDorgl2(m, n, k, a, lda, tau, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorglqer is an interface wrapper for Dorglqer type
type _gonum_org_v1_gonum_lapack_testlapack_Dorglqer struct {
	WDgelq2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgelqf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgl2 func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64)
	WDorglq func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorglqer) Dgelq2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgelq2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorglqer) Dgelqf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgelqf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorglqer) Dorgl2(m int, n int, k int, a []float64, lda int, tau []float64, work []float64) {
	W.WDorgl2(m, n, k, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorglqer) Dorglq(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorglq(m, n, k, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorgqler is an interface wrapper for Dorgqler type
type _gonum_org_v1_gonum_lapack_testlapack_Dorgqler struct {
	WDlarfg func(n int, alpha float64, x []float64, incX int) (beta float64, tau float64)
	WDorgql func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgqler) Dlarfg(n int, alpha float64, x []float64, incX int) (beta float64, tau float64) {
	return W.WDlarfg(n, alpha, x, incX)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgqler) Dorgql(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgql(m, n, k, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorgqrer is an interface wrapper for Dorgqrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dorgqrer struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgeqrf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorg2r func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgqrer) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgqrer) Dgeqrf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgeqrf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgqrer) Dorg2r(m int, n int, k int, a []float64, lda int, tau []float64, work []float64) {
	W.WDorg2r(m, n, k, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgqrer) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorgtrer is an interface wrapper for Dorgtrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dorgtrer struct {
	WDorgql func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgtr func(uplo blas.Uplo, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDsytrd func(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgtrer) Dorgql(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgql(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgtrer) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgtrer) Dorgtr(uplo blas.Uplo, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgtr(uplo, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorgtrer) Dsytrd(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int) {
	W.WDsytrd(uplo, n, a, lda, d, e, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorm2rer is an interface wrapper for Dorm2rer type
type _gonum_org_v1_gonum_lapack_testlapack_Dorm2rer struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgeqrf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorm2r func(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorm2rer) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorm2rer) Dgeqrf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgeqrf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorm2rer) Dorm2r(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64) {
	W.WDorm2r(side, trans, m, n, k, a, lda, tau, c, ldc, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dormbrer is an interface wrapper for Dormbrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dormbrer struct {
	WDgebd2 func(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64)
	WDgebrd func(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int)
	WDormbr func(vect lapack.ApplyOrtho, side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dormbrer) Dgebd2(m int, n int, a []float64, lda int, d []float64, e []float64, tauq []float64, taup []float64, work []float64) {
	W.WDgebd2(m, n, a, lda, d, e, tauq, taup, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormbrer) Dgebrd(m int, n int, a []float64, lda int, d []float64, e []float64, tauQ []float64, tauP []float64, work []float64, lwork int) {
	W.WDgebrd(m, n, a, lda, d, e, tauQ, tauP, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormbrer) Dormbr(vect lapack.ApplyOrtho, side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int) {
	W.WDormbr(vect, side, trans, m, n, k, a, lda, tau, c, ldc, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dormhrer is an interface wrapper for Dormhrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dormhrer struct {
	WDgehrd func(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDormhr func(side blas.Side, trans blas.Transpose, m int, n int, ilo int, ihi int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dormhrer) Dgehrd(n int, ilo int, ihi int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgehrd(n, ilo, ihi, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormhrer) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormhrer) Dormhr(side blas.Side, trans blas.Transpose, m int, n int, ilo int, ihi int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int) {
	W.WDormhr(side, trans, m, n, ilo, ihi, a, lda, tau, c, ldc, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dorml2er is an interface wrapper for Dorml2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dorml2er struct {
	WDgelq2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgelqf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorml2 func(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dorml2er) Dgelq2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgelq2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorml2er) Dgelqf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgelqf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dorml2er) Dorml2(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64) {
	W.WDorml2(side, trans, m, n, k, a, lda, tau, c, ldc, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dormlqer is an interface wrapper for Dormlqer type
type _gonum_org_v1_gonum_lapack_testlapack_Dormlqer struct {
	WDgelq2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgelqf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorml2 func(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64)
	WDormlq func(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dormlqer) Dgelq2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgelq2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormlqer) Dgelqf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgelqf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormlqer) Dorml2(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64) {
	W.WDorml2(side, trans, m, n, k, a, lda, tau, c, ldc, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormlqer) Dormlq(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int) {
	W.WDormlq(side, trans, m, n, k, a, lda, tau, c, ldc, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dormqrer is an interface wrapper for Dormqrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dormqrer struct {
	WDgeqr2 func(m int, n int, a []float64, lda int, tau []float64, work []float64)
	WDgeqrf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorm2r func(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64)
	WDormqr func(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dormqrer) Dgeqr2(m int, n int, a []float64, lda int, tau []float64, work []float64) {
	W.WDgeqr2(m, n, a, lda, tau, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormqrer) Dgeqrf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgeqrf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormqrer) Dorm2r(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64) {
	W.WDorm2r(side, trans, m, n, k, a, lda, tau, c, ldc, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormqrer) Dormqr(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64, lwork int) {
	W.WDormqr(side, trans, m, n, k, a, lda, tau, c, ldc, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dormr2er is an interface wrapper for Dormr2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dormr2er struct {
	WDgerqf func(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDormr2 func(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dormr2er) Dgerqf(m int, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDgerqf(m, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dormr2er) Dormr2(side blas.Side, trans blas.Transpose, m int, n int, k int, a []float64, lda int, tau []float64, c []float64, ldc int, work []float64) {
	W.WDormr2(side, trans, m, n, k, a, lda, tau, c, ldc, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpbconer is an interface wrapper for Dpbconer type
type _gonum_org_v1_gonum_lapack_testlapack_Dpbconer struct {
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
	WDlansb func(norm lapack.MatrixNorm, uplo blas.Uplo, n int, kd int, ab []float64, ldab int, work []float64) float64
	WDpbcon func(uplo blas.Uplo, n int, kd int, ab []float64, ldab int, anorm float64, work []float64, iwork []int) float64
	WDpbtrf func(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool)
	WDpbtrs func(uplo blas.Uplo, n int, kd int, nrhs int, ab []float64, ldab int, b []float64, ldb int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbconer) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbconer) Dlansb(norm lapack.MatrixNorm, uplo blas.Uplo, n int, kd int, ab []float64, ldab int, work []float64) float64 {
	return W.WDlansb(norm, uplo, n, kd, ab, ldab, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbconer) Dpbcon(uplo blas.Uplo, n int, kd int, ab []float64, ldab int, anorm float64, work []float64, iwork []int) float64 {
	return W.WDpbcon(uplo, n, kd, ab, ldab, anorm, work, iwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbconer) Dpbtrf(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool) {
	return W.WDpbtrf(uplo, n, kd, ab, ldab)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbconer) Dpbtrs(uplo blas.Uplo, n int, kd int, nrhs int, ab []float64, ldab int, b []float64, ldb int) {
	W.WDpbtrs(uplo, n, kd, nrhs, ab, ldab, b, ldb)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpbtf2er is an interface wrapper for Dpbtf2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dpbtf2er struct {
	WDpbtf2 func(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbtf2er) Dpbtf2(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool) {
	return W.WDpbtf2(uplo, n, kd, ab, ldab)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpbtrfer is an interface wrapper for Dpbtrfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dpbtrfer struct {
	WDpbtrf func(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbtrfer) Dpbtrf(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool) {
	return W.WDpbtrf(uplo, n, kd, ab, ldab)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpbtrser is an interface wrapper for Dpbtrser type
type _gonum_org_v1_gonum_lapack_testlapack_Dpbtrser struct {
	WDpbtrf func(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool)
	WDpbtrs func(uplo blas.Uplo, n int, kd int, nrhs int, ab []float64, ldab int, b []float64, ldb int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbtrser) Dpbtrf(uplo blas.Uplo, n int, kd int, ab []float64, ldab int) (ok bool) {
	return W.WDpbtrf(uplo, n, kd, ab, ldab)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpbtrser) Dpbtrs(uplo blas.Uplo, n int, kd int, nrhs int, ab []float64, ldab int, b []float64, ldb int) {
	W.WDpbtrs(uplo, n, kd, nrhs, ab, ldab, b, ldb)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpoconer is an interface wrapper for Dpoconer type
type _gonum_org_v1_gonum_lapack_testlapack_Dpoconer struct {
	WDgecon func(norm lapack.MatrixNorm, n int, a []float64, lda int, anorm float64, work []float64, iwork []int) float64
	WDgetrf func(m int, n int, a []float64, lda int, ipiv []int) bool
	WDgetri func(n int, a []float64, lda int, ipiv []int, work []float64, lwork int) bool
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
	WDlansy func(norm lapack.MatrixNorm, uplo blas.Uplo, n int, a []float64, lda int, work []float64) float64
	WDpocon func(uplo blas.Uplo, n int, a []float64, lda int, anorm float64, work []float64, iwork []int) float64
	WDpotrf func(ul blas.Uplo, n int, a []float64, lda int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpoconer) Dgecon(norm lapack.MatrixNorm, n int, a []float64, lda int, anorm float64, work []float64, iwork []int) float64 {
	return W.WDgecon(norm, n, a, lda, anorm, work, iwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpoconer) Dgetrf(m int, n int, a []float64, lda int, ipiv []int) bool {
	return W.WDgetrf(m, n, a, lda, ipiv)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpoconer) Dgetri(n int, a []float64, lda int, ipiv []int, work []float64, lwork int) bool {
	return W.WDgetri(n, a, lda, ipiv, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpoconer) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpoconer) Dlansy(norm lapack.MatrixNorm, uplo blas.Uplo, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlansy(norm, uplo, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpoconer) Dpocon(uplo blas.Uplo, n int, a []float64, lda int, anorm float64, work []float64, iwork []int) float64 {
	return W.WDpocon(uplo, n, a, lda, anorm, work, iwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpoconer) Dpotrf(ul blas.Uplo, n int, a []float64, lda int) (ok bool) {
	return W.WDpotrf(ul, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpotf2er is an interface wrapper for Dpotf2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dpotf2er struct {
	WDpotf2 func(ul blas.Uplo, n int, a []float64, lda int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpotf2er) Dpotf2(ul blas.Uplo, n int, a []float64, lda int) (ok bool) {
	return W.WDpotf2(ul, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpotrfer is an interface wrapper for Dpotrfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dpotrfer struct {
	WDpotrf func(ul blas.Uplo, n int, a []float64, lda int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpotrfer) Dpotrf(ul blas.Uplo, n int, a []float64, lda int) (ok bool) {
	return W.WDpotrf(ul, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpotrier is an interface wrapper for Dpotrier type
type _gonum_org_v1_gonum_lapack_testlapack_Dpotrier struct {
	WDpotrf func(uplo blas.Uplo, n int, a []float64, lda int) bool
	WDpotri func(uplo blas.Uplo, n int, a []float64, lda int) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpotrier) Dpotrf(uplo blas.Uplo, n int, a []float64, lda int) bool {
	return W.WDpotrf(uplo, n, a, lda)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpotrier) Dpotri(uplo blas.Uplo, n int, a []float64, lda int) bool {
	return W.WDpotri(uplo, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dpotrser is an interface wrapper for Dpotrser type
type _gonum_org_v1_gonum_lapack_testlapack_Dpotrser struct {
	WDpotrf func(uplo blas.Uplo, n int, a []float64, lda int) bool
	WDpotrs func(uplo blas.Uplo, n int, nrhs int, a []float64, lda int, b []float64, ldb int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dpotrser) Dpotrf(uplo blas.Uplo, n int, a []float64, lda int) bool {
	return W.WDpotrf(uplo, n, a, lda)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dpotrser) Dpotrs(uplo blas.Uplo, n int, nrhs int, a []float64, lda int, b []float64, ldb int) {
	W.WDpotrs(uplo, n, nrhs, a, lda, b, ldb)
}

// _gonum_org_v1_gonum_lapack_testlapack_Drscler is an interface wrapper for Drscler type
type _gonum_org_v1_gonum_lapack_testlapack_Drscler struct {
	WDrscl func(n int, a float64, x []float64, incX int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Drscler) Drscl(n int, a float64, x []float64, incX int) {
	W.WDrscl(n, a, x, incX)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dsteqrer is an interface wrapper for Dsteqrer type
type _gonum_org_v1_gonum_lapack_testlapack_Dsteqrer struct {
	WDorgql func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgtr func(uplo blas.Uplo, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDsteqr func(compz lapack.EVComp, n int, d []float64, e []float64, z []float64, ldz int, work []float64) (ok bool)
	WDsytrd func(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dsteqrer) Dorgql(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgql(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsteqrer) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsteqrer) Dorgtr(uplo blas.Uplo, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgtr(uplo, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsteqrer) Dsteqr(compz lapack.EVComp, n int, d []float64, e []float64, z []float64, ldz int, work []float64) (ok bool) {
	return W.WDsteqr(compz, n, d, e, z, ldz, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsteqrer) Dsytrd(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int) {
	W.WDsytrd(uplo, n, a, lda, d, e, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dsterfer is an interface wrapper for Dsterfer type
type _gonum_org_v1_gonum_lapack_testlapack_Dsterfer struct {
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
	WDlansy func(norm lapack.MatrixNorm, uplo blas.Uplo, n int, a []float64, lda int, work []float64) float64
	WDorgql func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgtr func(uplo blas.Uplo, n int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDsteqr func(compz lapack.EVComp, n int, d []float64, e []float64, z []float64, ldz int, work []float64) (ok bool)
	WDsterf func(n int, d []float64, e []float64) (ok bool)
	WDsytrd func(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dlansy(norm lapack.MatrixNorm, uplo blas.Uplo, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlansy(norm, uplo, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dorgql(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgql(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dorgtr(uplo blas.Uplo, n int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgtr(uplo, n, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dsteqr(compz lapack.EVComp, n int, d []float64, e []float64, z []float64, ldz int, work []float64) (ok bool) {
	return W.WDsteqr(compz, n, d, e, z, ldz, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dsterf(n int, d []float64, e []float64) (ok bool) {
	return W.WDsterf(n, d, e)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsterfer) Dsytrd(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int) {
	W.WDsytrd(uplo, n, a, lda, d, e, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dsyever is an interface wrapper for Dsyever type
type _gonum_org_v1_gonum_lapack_testlapack_Dsyever struct {
	WDsyev func(jobz lapack.EVJob, uplo blas.Uplo, n int, a []float64, lda int, w []float64, work []float64, lwork int) (ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dsyever) Dsyev(jobz lapack.EVJob, uplo blas.Uplo, n int, a []float64, lda int, w []float64, work []float64, lwork int) (ok bool) {
	return W.WDsyev(jobz, uplo, n, a, lda, w, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dsytd2er is an interface wrapper for Dsytd2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dsytd2er struct {
	WDsytd2 func(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dsytd2er) Dsytd2(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64) {
	W.WDsytd2(uplo, n, a, lda, d, e, tau)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dsytrder is an interface wrapper for Dsytrder type
type _gonum_org_v1_gonum_lapack_testlapack_Dsytrder struct {
	WDorgql func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDorgqr func(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int)
	WDsytrd func(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dsytrder) Dorgql(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgql(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsytrder) Dorgqr(m int, n int, k int, a []float64, lda int, tau []float64, work []float64, lwork int) {
	W.WDorgqr(m, n, k, a, lda, tau, work, lwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dsytrder) Dsytrd(uplo blas.Uplo, n int, a []float64, lda int, d []float64, e []float64, tau []float64, work []float64, lwork int) {
	W.WDsytrd(uplo, n, a, lda, d, e, tau, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dtgsjaer is an interface wrapper for Dtgsjaer type
type _gonum_org_v1_gonum_lapack_testlapack_Dtgsjaer struct {
	WDlange func(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64
	WDtgsja func(jobU lapack.GSVDJob, jobV lapack.GSVDJob, jobQ lapack.GSVDJob, m int, p int, n int, k int, l int, a []float64, lda int, b []float64, ldb int, tola float64, tolb float64, alpha []float64, beta []float64, u []float64, ldu int, v []float64, ldv int, q []float64, ldq int, work []float64) (cycles int, ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dtgsjaer) Dlange(norm lapack.MatrixNorm, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlange(norm, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dtgsjaer) Dtgsja(jobU lapack.GSVDJob, jobV lapack.GSVDJob, jobQ lapack.GSVDJob, m int, p int, n int, k int, l int, a []float64, lda int, b []float64, ldb int, tola float64, tolb float64, alpha []float64, beta []float64, u []float64, ldu int, v []float64, ldv int, q []float64, ldq int, work []float64) (cycles int, ok bool) {
	return W.WDtgsja(jobU, jobV, jobQ, m, p, n, k, l, a, lda, b, ldb, tola, tolb, alpha, beta, u, ldu, v, ldv, q, ldq, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dtrconer is an interface wrapper for Dtrconer type
type _gonum_org_v1_gonum_lapack_testlapack_Dtrconer struct {
	WDlantr func(norm lapack.MatrixNorm, uplo blas.Uplo, diag blas.Diag, m int, n int, a []float64, lda int, work []float64) float64
	WDtrcon func(norm lapack.MatrixNorm, uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int, work []float64, iwork []int) float64
	WDtrtri func(uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dtrconer) Dlantr(norm lapack.MatrixNorm, uplo blas.Uplo, diag blas.Diag, m int, n int, a []float64, lda int, work []float64) float64 {
	return W.WDlantr(norm, uplo, diag, m, n, a, lda, work)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dtrconer) Dtrcon(norm lapack.MatrixNorm, uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int, work []float64, iwork []int) float64 {
	return W.WDtrcon(norm, uplo, diag, n, a, lda, work, iwork)
}
func (W _gonum_org_v1_gonum_lapack_testlapack_Dtrconer) Dtrtri(uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int) bool {
	return W.WDtrtri(uplo, diag, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dtrevc3er is an interface wrapper for Dtrevc3er type
type _gonum_org_v1_gonum_lapack_testlapack_Dtrevc3er struct {
	WDtrevc3 func(side lapack.EVSide, howmny lapack.EVHowMany, selected []bool, n int, t []float64, ldt int, vl []float64, ldvl int, vr []float64, ldvr int, mm int, work []float64, lwork int) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dtrevc3er) Dtrevc3(side lapack.EVSide, howmny lapack.EVHowMany, selected []bool, n int, t []float64, ldt int, vl []float64, ldvl int, vr []float64, ldvr int, mm int, work []float64, lwork int) int {
	return W.WDtrevc3(side, howmny, selected, n, t, ldt, vl, ldvl, vr, ldvr, mm, work, lwork)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dtrexcer is an interface wrapper for Dtrexcer type
type _gonum_org_v1_gonum_lapack_testlapack_Dtrexcer struct {
	WDtrexc func(compq lapack.UpdateSchurComp, n int, t []float64, ldt int, q []float64, ldq int, ifst int, ilst int, work []float64) (ifstOut int, ilstOut int, ok bool)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dtrexcer) Dtrexc(compq lapack.UpdateSchurComp, n int, t []float64, ldt int, q []float64, ldq int, ifst int, ilst int, work []float64) (ifstOut int, ilstOut int, ok bool) {
	return W.WDtrexc(compq, n, t, ldt, q, ldq, ifst, ilst, work)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dtrti2er is an interface wrapper for Dtrti2er type
type _gonum_org_v1_gonum_lapack_testlapack_Dtrti2er struct {
	WDtrti2 func(uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int)
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dtrti2er) Dtrti2(uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int) {
	W.WDtrti2(uplo, diag, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Dtrtrier is an interface wrapper for Dtrtrier type
type _gonum_org_v1_gonum_lapack_testlapack_Dtrtrier struct {
	WDtrtri func(uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int) bool
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Dtrtrier) Dtrtri(uplo blas.Uplo, diag blas.Diag, n int, a []float64, lda int) bool {
	return W.WDtrtri(uplo, diag, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Iladlcer is an interface wrapper for Iladlcer type
type _gonum_org_v1_gonum_lapack_testlapack_Iladlcer struct {
	WIladlc func(m int, n int, a []float64, lda int) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Iladlcer) Iladlc(m int, n int, a []float64, lda int) int {
	return W.WIladlc(m, n, a, lda)
}

// _gonum_org_v1_gonum_lapack_testlapack_Iladlrer is an interface wrapper for Iladlrer type
type _gonum_org_v1_gonum_lapack_testlapack_Iladlrer struct {
	WIladlr func(m int, n int, a []float64, lda int) int
}

func (W _gonum_org_v1_gonum_lapack_testlapack_Iladlrer) Iladlr(m int, n int, a []float64, lda int) int {
	return W.WIladlr(m, n, a, lda)
}
