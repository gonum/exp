// Code generated by 'goexports gonum.org/v1/gonum/unit'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.14,!go1.15

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/unit"
)

func init() {
	Symbols["gonum.org/v1/gonum/unit"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Ampere":               reflect.ValueOf(unit.Ampere),
		"AngleDim":             reflect.ValueOf(unit.AngleDim),
		"Atto":                 reflect.ValueOf(unit.Atto),
		"Becquerel":            reflect.ValueOf(unit.Becquerel),
		"Candela":              reflect.ValueOf(unit.Candela),
		"Centi":                reflect.ValueOf(unit.Centi),
		"Coulomb":              reflect.ValueOf(unit.Coulomb),
		"CurrentDim":           reflect.ValueOf(unit.CurrentDim),
		"Deca":                 reflect.ValueOf(float32(unit.Deca)),
		"Deci":                 reflect.ValueOf(unit.Deci),
		"DimensionsMatch":      reflect.ValueOf(unit.DimensionsMatch),
		"Exa":                  reflect.ValueOf(float32(unit.Exa)),
		"Farad":                reflect.ValueOf(unit.Farad),
		"Femto":                reflect.ValueOf(unit.Femto),
		"Giga":                 reflect.ValueOf(float32(unit.Giga)),
		"Gram":                 reflect.ValueOf(unit.Gram),
		"Gray":                 reflect.ValueOf(unit.Gray),
		"Hecto":                reflect.ValueOf(float32(unit.Hecto)),
		"Henry":                reflect.ValueOf(unit.Henry),
		"Hertz":                reflect.ValueOf(unit.Hertz),
		"Hour":                 reflect.ValueOf(unit.Hour),
		"Joule":                reflect.ValueOf(unit.Joule),
		"Kelvin":               reflect.ValueOf(unit.Kelvin),
		"Kilo":                 reflect.ValueOf(float32(unit.Kilo)),
		"Kilogram":             reflect.ValueOf(unit.Kilogram),
		"LengthDim":            reflect.ValueOf(unit.LengthDim),
		"Litre":                reflect.ValueOf(unit.Litre),
		"LuminousIntensityDim": reflect.ValueOf(unit.LuminousIntensityDim),
		"MassDim":              reflect.ValueOf(unit.MassDim),
		"Mega":                 reflect.ValueOf(float32(unit.Mega)),
		"Metre":                reflect.ValueOf(unit.Metre),
		"Micro":                reflect.ValueOf(unit.Micro),
		"Milli":                reflect.ValueOf(unit.Milli),
		"Minute":               reflect.ValueOf(unit.Minute),
		"Mol":                  reflect.ValueOf(unit.Mol),
		"MoleDim":              reflect.ValueOf(unit.MoleDim),
		"Nano":                 reflect.ValueOf(unit.Nano),
		"New":                  reflect.ValueOf(unit.New),
		"NewDimension":         reflect.ValueOf(unit.NewDimension),
		"Newton":               reflect.ValueOf(unit.Newton),
		"Newtonmetre":          reflect.ValueOf(unit.Newtonmetre),
		"Ohm":                  reflect.ValueOf(unit.Ohm),
		"Pascal":               reflect.ValueOf(unit.Pascal),
		"Peta":                 reflect.ValueOf(float32(unit.Peta)),
		"Pico":                 reflect.ValueOf(unit.Pico),
		"Rad":                  reflect.ValueOf(unit.Rad),
		"Second":               reflect.ValueOf(unit.Second),
		"Siemens":              reflect.ValueOf(unit.Siemens),
		"Sievert":              reflect.ValueOf(unit.Sievert),
		"SymbolExists":         reflect.ValueOf(unit.SymbolExists),
		"TemperatureDim":       reflect.ValueOf(unit.TemperatureDim),
		"Tera":                 reflect.ValueOf(float32(unit.Tera)),
		"Tesla":                reflect.ValueOf(unit.Tesla),
		"TimeDim":              reflect.ValueOf(unit.TimeDim),
		"Volt":                 reflect.ValueOf(unit.Volt),
		"Watt":                 reflect.ValueOf(unit.Watt),
		"Weber":                reflect.ValueOf(unit.Weber),
		"Yocto":                reflect.ValueOf(unit.Yocto),
		"Yotta":                reflect.ValueOf(float32(unit.Yotta)),
		"Zepto":                reflect.ValueOf(unit.Zepto),
		"Zetta":                reflect.ValueOf(float32(unit.Zetta)),

		// type definitions
		"AbsorbedRadioactiveDose":   reflect.ValueOf((*unit.AbsorbedRadioactiveDose)(nil)),
		"Acceleration":              reflect.ValueOf((*unit.Acceleration)(nil)),
		"Angle":                     reflect.ValueOf((*unit.Angle)(nil)),
		"Area":                      reflect.ValueOf((*unit.Area)(nil)),
		"Capacitance":               reflect.ValueOf((*unit.Capacitance)(nil)),
		"Charge":                    reflect.ValueOf((*unit.Charge)(nil)),
		"Conductance":               reflect.ValueOf((*unit.Conductance)(nil)),
		"Current":                   reflect.ValueOf((*unit.Current)(nil)),
		"Dimension":                 reflect.ValueOf((*unit.Dimension)(nil)),
		"Dimensions":                reflect.ValueOf((*unit.Dimensions)(nil)),
		"Dimless":                   reflect.ValueOf((*unit.Dimless)(nil)),
		"Energy":                    reflect.ValueOf((*unit.Energy)(nil)),
		"EquivalentRadioactiveDose": reflect.ValueOf((*unit.EquivalentRadioactiveDose)(nil)),
		"Force":                     reflect.ValueOf((*unit.Force)(nil)),
		"Frequency":                 reflect.ValueOf((*unit.Frequency)(nil)),
		"Inductance":                reflect.ValueOf((*unit.Inductance)(nil)),
		"Length":                    reflect.ValueOf((*unit.Length)(nil)),
		"LuminousIntensity":         reflect.ValueOf((*unit.LuminousIntensity)(nil)),
		"MagneticFlux":              reflect.ValueOf((*unit.MagneticFlux)(nil)),
		"MagneticFluxDensity":       reflect.ValueOf((*unit.MagneticFluxDensity)(nil)),
		"Mass":                      reflect.ValueOf((*unit.Mass)(nil)),
		"Mole":                      reflect.ValueOf((*unit.Mole)(nil)),
		"Power":                     reflect.ValueOf((*unit.Power)(nil)),
		"Pressure":                  reflect.ValueOf((*unit.Pressure)(nil)),
		"Radioactivity":             reflect.ValueOf((*unit.Radioactivity)(nil)),
		"Resistance":                reflect.ValueOf((*unit.Resistance)(nil)),
		"Temperature":               reflect.ValueOf((*unit.Temperature)(nil)),
		"Time":                      reflect.ValueOf((*unit.Time)(nil)),
		"Torque":                    reflect.ValueOf((*unit.Torque)(nil)),
		"Unit":                      reflect.ValueOf((*unit.Unit)(nil)),
		"Uniter":                    reflect.ValueOf((*unit.Uniter)(nil)),
		"Velocity":                  reflect.ValueOf((*unit.Velocity)(nil)),
		"Voltage":                   reflect.ValueOf((*unit.Voltage)(nil)),
		"Volume":                    reflect.ValueOf((*unit.Volume)(nil)),

		// interface wrapper definitions
		"_Uniter": reflect.ValueOf((*_gonum_org_v1_gonum_unit_Uniter)(nil)),
	}
}

// _gonum_org_v1_gonum_unit_Uniter is an interface wrapper for Uniter type
type _gonum_org_v1_gonum_unit_Uniter struct {
	WUnit func() *unit.Unit
}

func (W _gonum_org_v1_gonum_unit_Uniter) Unit() *unit.Unit { return W.WUnit() }
