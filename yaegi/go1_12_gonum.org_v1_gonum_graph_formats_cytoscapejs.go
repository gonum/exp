// Code generated by 'goexports gonum.org/v1/gonum/graph/formats/cytoscapejs'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.12,!go1.13

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/graph/formats/cytoscapejs"
)

func init() {
	Symbols["gonum.org/v1/gonum/graph/formats/cytoscapejs"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"EdgeElement":    reflect.ValueOf(cytoscapejs.EdgeElement),
		"InvalidElement": reflect.ValueOf(cytoscapejs.InvalidElement),
		"NodeElement":    reflect.ValueOf(cytoscapejs.NodeElement),

		// type definitions
		"Edge":          reflect.ValueOf((*cytoscapejs.Edge)(nil)),
		"EdgeData":      reflect.ValueOf((*cytoscapejs.EdgeData)(nil)),
		"ElemData":      reflect.ValueOf((*cytoscapejs.ElemData)(nil)),
		"ElemType":      reflect.ValueOf((*cytoscapejs.ElemType)(nil)),
		"Element":       reflect.ValueOf((*cytoscapejs.Element)(nil)),
		"Elements":      reflect.ValueOf((*cytoscapejs.Elements)(nil)),
		"GraphElem":     reflect.ValueOf((*cytoscapejs.GraphElem)(nil)),
		"GraphNodeEdge": reflect.ValueOf((*cytoscapejs.GraphNodeEdge)(nil)),
		"Node":          reflect.ValueOf((*cytoscapejs.Node)(nil)),
		"NodeData":      reflect.ValueOf((*cytoscapejs.NodeData)(nil)),
		"Position":      reflect.ValueOf((*cytoscapejs.Position)(nil)),
	}
}
