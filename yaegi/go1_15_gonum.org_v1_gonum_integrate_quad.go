// Code generated by 'github.com/containous/yaegi/extract gonum.org/v1/gonum/integrate/quad'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.15,!go1.16

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/integrate/quad"
)

func init() {
	Symbols["gonum.org/v1/gonum/integrate/quad"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Fixed": reflect.ValueOf(quad.Fixed),

		// type definitions
		"FixedLocationSingler": reflect.ValueOf((*quad.FixedLocationSingler)(nil)),
		"FixedLocationer":      reflect.ValueOf((*quad.FixedLocationer)(nil)),
		"Hermite":              reflect.ValueOf((*quad.Hermite)(nil)),
		"Legendre":             reflect.ValueOf((*quad.Legendre)(nil)),

		// interface wrapper definitions
		"_FixedLocationSingler": reflect.ValueOf((*_gonum_org_v1_gonum_integrate_quad_FixedLocationSingler)(nil)),
		"_FixedLocationer":      reflect.ValueOf((*_gonum_org_v1_gonum_integrate_quad_FixedLocationer)(nil)),
	}
}

// _gonum_org_v1_gonum_integrate_quad_FixedLocationSingler is an interface wrapper for FixedLocationSingler type
type _gonum_org_v1_gonum_integrate_quad_FixedLocationSingler struct {
	WFixedLocationSingle func(n int, k int, min float64, max float64) (x float64, weight float64)
}

func (W _gonum_org_v1_gonum_integrate_quad_FixedLocationSingler) FixedLocationSingle(n int, k int, min float64, max float64) (x float64, weight float64) {
	return W.WFixedLocationSingle(n, k, min, max)
}

// _gonum_org_v1_gonum_integrate_quad_FixedLocationer is an interface wrapper for FixedLocationer type
type _gonum_org_v1_gonum_integrate_quad_FixedLocationer struct {
	WFixedLocations func(x []float64, weight []float64, min float64, max float64)
}

func (W _gonum_org_v1_gonum_integrate_quad_FixedLocationer) FixedLocations(x []float64, weight []float64, min float64, max float64) {
	W.WFixedLocations(x, weight, min, max)
}
