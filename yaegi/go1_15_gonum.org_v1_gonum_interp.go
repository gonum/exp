// Code generated by 'github.com/containous/yaegi/extract gonum.org/v1/gonum/interp'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.15,!go1.16

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/interp"
)

func init() {
	Symbols["gonum.org/v1/gonum/interp"] = map[string]reflect.Value{
		// type definitions
		"AkimaSpline":         reflect.ValueOf((*interp.AkimaSpline)(nil)),
		"Constant":            reflect.ValueOf((*interp.Constant)(nil)),
		"DerivativePredictor": reflect.ValueOf((*interp.DerivativePredictor)(nil)),
		"FittablePredictor":   reflect.ValueOf((*interp.FittablePredictor)(nil)),
		"Fitter":              reflect.ValueOf((*interp.Fitter)(nil)),
		"Function":            reflect.ValueOf((*interp.Function)(nil)),
		"PiecewiseConstant":   reflect.ValueOf((*interp.PiecewiseConstant)(nil)),
		"PiecewiseCubic":      reflect.ValueOf((*interp.PiecewiseCubic)(nil)),
		"PiecewiseLinear":     reflect.ValueOf((*interp.PiecewiseLinear)(nil)),
		"Predictor":           reflect.ValueOf((*interp.Predictor)(nil)),

		// interface wrapper definitions
		"_DerivativePredictor": reflect.ValueOf((*_gonum_org_v1_gonum_interp_DerivativePredictor)(nil)),
		"_FittablePredictor":   reflect.ValueOf((*_gonum_org_v1_gonum_interp_FittablePredictor)(nil)),
		"_Fitter":              reflect.ValueOf((*_gonum_org_v1_gonum_interp_Fitter)(nil)),
		"_Predictor":           reflect.ValueOf((*_gonum_org_v1_gonum_interp_Predictor)(nil)),
	}
}

// _gonum_org_v1_gonum_interp_DerivativePredictor is an interface wrapper for DerivativePredictor type
type _gonum_org_v1_gonum_interp_DerivativePredictor struct {
	WPredict           func(x float64) float64
	WPredictDerivative func(x float64) float64
}

func (W _gonum_org_v1_gonum_interp_DerivativePredictor) Predict(x float64) float64 {
	return W.WPredict(x)
}
func (W _gonum_org_v1_gonum_interp_DerivativePredictor) PredictDerivative(x float64) float64 {
	return W.WPredictDerivative(x)
}

// _gonum_org_v1_gonum_interp_FittablePredictor is an interface wrapper for FittablePredictor type
type _gonum_org_v1_gonum_interp_FittablePredictor struct {
	WFit     func(xs []float64, ys []float64) error
	WPredict func(x float64) float64
}

func (W _gonum_org_v1_gonum_interp_FittablePredictor) Fit(xs []float64, ys []float64) error {
	return W.WFit(xs, ys)
}
func (W _gonum_org_v1_gonum_interp_FittablePredictor) Predict(x float64) float64 {
	return W.WPredict(x)
}

// _gonum_org_v1_gonum_interp_Fitter is an interface wrapper for Fitter type
type _gonum_org_v1_gonum_interp_Fitter struct {
	WFit func(xs []float64, ys []float64) error
}

func (W _gonum_org_v1_gonum_interp_Fitter) Fit(xs []float64, ys []float64) error {
	return W.WFit(xs, ys)
}

// _gonum_org_v1_gonum_interp_Predictor is an interface wrapper for Predictor type
type _gonum_org_v1_gonum_interp_Predictor struct {
	WPredict func(x float64) float64
}

func (W _gonum_org_v1_gonum_interp_Predictor) Predict(x float64) float64 { return W.WPredict(x) }
