// Code generated by 'goexports gonum.org/v1/gonum/graph/path'. DO NOT EDIT.

// Copyright Â©2019 The Gonum Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

// +build go1.14,!go1.15

package yaegi

import (
	"reflect"

	"gonum.org/v1/gonum/graph"
	"gonum.org/v1/gonum/graph/path"
)

func init() {
	Symbols["gonum.org/v1/gonum/graph/path"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AStar":             reflect.ValueOf(path.AStar),
		"BellmanFordFrom":   reflect.ValueOf(path.BellmanFordFrom),
		"DijkstraAllPaths":  reflect.ValueOf(path.DijkstraAllPaths),
		"DijkstraFrom":      reflect.ValueOf(path.DijkstraFrom),
		"FloydWarshall":     reflect.ValueOf(path.FloydWarshall),
		"JohnsonAllPaths":   reflect.ValueOf(path.JohnsonAllPaths),
		"Kruskal":           reflect.ValueOf(path.Kruskal),
		"NullHeuristic":     reflect.ValueOf(path.NullHeuristic),
		"Prim":              reflect.ValueOf(path.Prim),
		"UniformCost":       reflect.ValueOf(path.UniformCost),
		"YenKShortestPaths": reflect.ValueOf(path.YenKShortestPaths),

		// type definitions
		"AllShortest":            reflect.ValueOf((*path.AllShortest)(nil)),
		"Heuristic":              reflect.ValueOf((*path.Heuristic)(nil)),
		"HeuristicCoster":        reflect.ValueOf((*path.HeuristicCoster)(nil)),
		"Shortest":               reflect.ValueOf((*path.Shortest)(nil)),
		"UndirectedWeightLister": reflect.ValueOf((*path.UndirectedWeightLister)(nil)),
		"Weighted":               reflect.ValueOf((*path.Weighted)(nil)),
		"WeightedBuilder":        reflect.ValueOf((*path.WeightedBuilder)(nil)),
		"Weighting":              reflect.ValueOf((*path.Weighting)(nil)),

		// interface wrapper definitions
		"_HeuristicCoster":        reflect.ValueOf((*_gonum_org_v1_gonum_graph_path_HeuristicCoster)(nil)),
		"_UndirectedWeightLister": reflect.ValueOf((*_gonum_org_v1_gonum_graph_path_UndirectedWeightLister)(nil)),
		"_Weighted":               reflect.ValueOf((*_gonum_org_v1_gonum_graph_path_Weighted)(nil)),
		"_WeightedBuilder":        reflect.ValueOf((*_gonum_org_v1_gonum_graph_path_WeightedBuilder)(nil)),
	}
}

// _gonum_org_v1_gonum_graph_path_HeuristicCoster is an interface wrapper for HeuristicCoster type
type _gonum_org_v1_gonum_graph_path_HeuristicCoster struct {
	WHeuristicCost func(x graph.Node, y graph.Node) float64
}

func (W _gonum_org_v1_gonum_graph_path_HeuristicCoster) HeuristicCost(x graph.Node, y graph.Node) float64 {
	return W.WHeuristicCost(x, y)
}

// _gonum_org_v1_gonum_graph_path_UndirectedWeightLister is an interface wrapper for UndirectedWeightLister type
type _gonum_org_v1_gonum_graph_path_UndirectedWeightLister struct {
	WEdge                func(uid int64, vid int64) graph.Edge
	WFrom                func(id int64) graph.Nodes
	WHasEdgeBetween      func(xid int64, yid int64) bool
	WNode                func(id int64) graph.Node
	WNodes               func() graph.Nodes
	WWeight              func(xid int64, yid int64) (w float64, ok bool)
	WWeightedEdge        func(uid int64, vid int64) graph.WeightedEdge
	WWeightedEdgeBetween func(xid int64, yid int64) graph.WeightedEdge
	WWeightedEdges       func() graph.WeightedEdges
}

func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) Edge(uid int64, vid int64) graph.Edge {
	return W.WEdge(uid, vid)
}
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) From(id int64) graph.Nodes {
	return W.WFrom(id)
}
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) HasEdgeBetween(xid int64, yid int64) bool {
	return W.WHasEdgeBetween(xid, yid)
}
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) Node(id int64) graph.Node {
	return W.WNode(id)
}
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) Nodes() graph.Nodes { return W.WNodes() }
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) Weight(xid int64, yid int64) (w float64, ok bool) {
	return W.WWeight(xid, yid)
}
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) WeightedEdge(uid int64, vid int64) graph.WeightedEdge {
	return W.WWeightedEdge(uid, vid)
}
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) WeightedEdgeBetween(xid int64, yid int64) graph.WeightedEdge {
	return W.WWeightedEdgeBetween(xid, yid)
}
func (W _gonum_org_v1_gonum_graph_path_UndirectedWeightLister) WeightedEdges() graph.WeightedEdges {
	return W.WWeightedEdges()
}

// _gonum_org_v1_gonum_graph_path_Weighted is an interface wrapper for Weighted type
type _gonum_org_v1_gonum_graph_path_Weighted struct {
	WWeight func(xid int64, yid int64) (w float64, ok bool)
}

func (W _gonum_org_v1_gonum_graph_path_Weighted) Weight(xid int64, yid int64) (w float64, ok bool) {
	return W.WWeight(xid, yid)
}

// _gonum_org_v1_gonum_graph_path_WeightedBuilder is an interface wrapper for WeightedBuilder type
type _gonum_org_v1_gonum_graph_path_WeightedBuilder struct {
	WAddNode         func(a0 graph.Node)
	WSetWeightedEdge func(a0 graph.WeightedEdge)
}

func (W _gonum_org_v1_gonum_graph_path_WeightedBuilder) AddNode(a0 graph.Node) { W.WAddNode(a0) }
func (W _gonum_org_v1_gonum_graph_path_WeightedBuilder) SetWeightedEdge(a0 graph.WeightedEdge) {
	W.WSetWeightedEdge(a0)
}
